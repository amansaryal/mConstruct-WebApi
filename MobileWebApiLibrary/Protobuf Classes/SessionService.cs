// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/SessionService.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grpc.services {

  /// <summary>Holder for reflection information generated from protos/SessionService.proto</summary>
  public static partial class SessionServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/SessionService.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SessionServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chtwcm90b3MvU2Vzc2lvblNlcnZpY2UucHJvdG8aE3Byb3Rvcy9Db21tb24u",
            "cHJvdG8iggEKDExvZ2luUmVxdWVzdBIQCgh1c2VybmFtZRgBIAEoCRIQCghw",
            "YXNzd29yZBgCIAEoCRIZCgdhcHBOYW1lGAMgASgOMgguQXBwbmFtZRIMCgRp",
            "bWVpGAQgASgJEhEKCWlwQWRkcmVzcxgFIAEoCRISCgphcHBWZXJzaW9uGAYg",
            "ASgFIkQKC1VzZXJTZXNzaW9uEhAKCHVzZXJuYW1lGAEgASgJEg0KBXRva2Vu",
            "GAIgASgJEhQKBXJvbGVzGAMgAygOMgUuUm9sZSI8Cg1Mb2dvdXRSZXF1ZXN0",
            "EhAKCHVzZXJuYW1lGAEgASgJEhkKB2FwcE5hbWUYAiABKA4yCC5BcHBuYW1l",
            "KjEKB0FwcG5hbWUSCgoGTk9OQU1FEAASDgoKTUNPTlNUUlVDVBABEgoKBk9O",
            "TVJGUxACKk0KBFJvbGUSCwoHTk9fUk9MRRAAEhIKDkZJRUxEX0VOR0lORUVS",
            "EAESFAoQUVVBTElUWV9FTkdJTkVFUhACEg4KCklORlJBX0xFQUQQAzJUCgdT",
            "ZXNzaW9uEiQKBUxvZ2luEg0uTG9naW5SZXF1ZXN0GgwuVXNlclNlc3Npb24S",
            "IwoGTG9nb3V0Eg4uTG9nb3V0UmVxdWVzdBoJLlJlc3BvbnNlQikKF2NvbS5t",
            "Q29uc3RydWN0LnByb3RvYnVmqgINR3JwYy5zZXJ2aWNlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Grpc.common.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Grpc.services.Appname), typeof(global::Grpc.services.Role), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.LoginRequest), global::Grpc.services.LoginRequest.Parser, new[]{ "Username", "Password", "AppName", "Imei", "IpAddress", "AppVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.UserSession), global::Grpc.services.UserSession.Parser, new[]{ "Username", "Token", "Roles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.LogoutRequest), global::Grpc.services.LogoutRequest.Parser, new[]{ "Username", "AppName" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Appname {
    [pbr::OriginalName("NONAME")] Noname = 0,
    [pbr::OriginalName("MCONSTRUCT")] Mconstruct = 1,
    [pbr::OriginalName("ONMRFS")] Onmrfs = 2,
  }

  public enum Role {
    [pbr::OriginalName("NO_ROLE")] NoRole = 0,
    [pbr::OriginalName("FIELD_ENGINEER")] FieldEngineer = 1,
    [pbr::OriginalName("QUALITY_ENGINEER")] QualityEngineer = 2,
    [pbr::OriginalName("INFRA_LEAD")] InfraLead = 3,
  }

  #endregion

  #region Messages
  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.SessionServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      appName_ = other.appName_;
      imei_ = other.imei_;
      ipAddress_ = other.ipAddress_;
      appVersion_ = other.appVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "appName" field.</summary>
    public const int AppNameFieldNumber = 3;
    private global::Grpc.services.Appname appName_ = global::Grpc.services.Appname.Noname;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.Appname AppName {
      get { return appName_; }
      set {
        appName_ = value;
      }
    }

    /// <summary>Field number for the "imei" field.</summary>
    public const int ImeiFieldNumber = 4;
    private string imei_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Imei {
      get { return imei_; }
      set {
        imei_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ipAddress" field.</summary>
    public const int IpAddressFieldNumber = 5;
    private string ipAddress_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IpAddress {
      get { return ipAddress_; }
      set {
        ipAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "appVersion" field.</summary>
    public const int AppVersionFieldNumber = 6;
    private int appVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AppVersion {
      get { return appVersion_; }
      set {
        appVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if (AppName != other.AppName) return false;
      if (Imei != other.Imei) return false;
      if (IpAddress != other.IpAddress) return false;
      if (AppVersion != other.AppVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (AppName != global::Grpc.services.Appname.Noname) hash ^= AppName.GetHashCode();
      if (Imei.Length != 0) hash ^= Imei.GetHashCode();
      if (IpAddress.Length != 0) hash ^= IpAddress.GetHashCode();
      if (AppVersion != 0) hash ^= AppVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (AppName != global::Grpc.services.Appname.Noname) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AppName);
      }
      if (Imei.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Imei);
      }
      if (IpAddress.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(IpAddress);
      }
      if (AppVersion != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AppVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (AppName != global::Grpc.services.Appname.Noname) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AppName);
      }
      if (Imei.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Imei);
      }
      if (IpAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IpAddress);
      }
      if (AppVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AppVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.AppName != global::Grpc.services.Appname.Noname) {
        AppName = other.AppName;
      }
      if (other.Imei.Length != 0) {
        Imei = other.Imei;
      }
      if (other.IpAddress.Length != 0) {
        IpAddress = other.IpAddress;
      }
      if (other.AppVersion != 0) {
        AppVersion = other.AppVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 24: {
            AppName = (global::Grpc.services.Appname) input.ReadEnum();
            break;
          }
          case 34: {
            Imei = input.ReadString();
            break;
          }
          case 42: {
            IpAddress = input.ReadString();
            break;
          }
          case 48: {
            AppVersion = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserSession : pb::IMessage<UserSession> {
    private static readonly pb::MessageParser<UserSession> _parser = new pb::MessageParser<UserSession>(() => new UserSession());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserSession> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.SessionServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSession() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSession(UserSession other) : this() {
      username_ = other.username_;
      token_ = other.token_;
      roles_ = other.roles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSession Clone() {
      return new UserSession(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 2;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "roles" field.</summary>
    public const int RolesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Grpc.services.Role> _repeated_roles_codec
        = pb::FieldCodec.ForEnum(26, x => (int) x, x => (global::Grpc.services.Role) x);
    private readonly pbc::RepeatedField<global::Grpc.services.Role> roles_ = new pbc::RepeatedField<global::Grpc.services.Role>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpc.services.Role> Roles {
      get { return roles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserSession);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserSession other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Token != other.Token) return false;
      if(!roles_.Equals(other.roles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      hash ^= roles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Token.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Token);
      }
      roles_.WriteTo(output, _repeated_roles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      size += roles_.CalculateSize(_repeated_roles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserSession other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      roles_.Add(other.roles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Token = input.ReadString();
            break;
          }
          case 26:
          case 24: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogoutRequest : pb::IMessage<LogoutRequest> {
    private static readonly pb::MessageParser<LogoutRequest> _parser = new pb::MessageParser<LogoutRequest>(() => new LogoutRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogoutRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.SessionServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest(LogoutRequest other) : this() {
      username_ = other.username_;
      appName_ = other.appName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogoutRequest Clone() {
      return new LogoutRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "appName" field.</summary>
    public const int AppNameFieldNumber = 2;
    private global::Grpc.services.Appname appName_ = global::Grpc.services.Appname.Noname;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.Appname AppName {
      get { return appName_; }
      set {
        appName_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogoutRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogoutRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (AppName != other.AppName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (AppName != global::Grpc.services.Appname.Noname) hash ^= AppName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (AppName != global::Grpc.services.Appname.Noname) {
        output.WriteRawTag(16);
        output.WriteEnum((int) AppName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (AppName != global::Grpc.services.Appname.Noname) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AppName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogoutRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.AppName != global::Grpc.services.Appname.Noname) {
        AppName = other.AppName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 16: {
            AppName = (global::Grpc.services.Appname) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
