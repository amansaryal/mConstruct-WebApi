// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/ConsumptionBookingData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grpc.consumptionBooking {

  /// <summary>Holder for reflection information generated from protos/ConsumptionBookingData.proto</summary>
  public static partial class ConsumptionBookingDataReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/ConsumptionBookingData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ConsumptionBookingDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNwcm90b3MvQ29uc3VtcHRpb25Cb29raW5nRGF0YS5wcm90byK6AQoDQm9R",
            "Eg8KB21hdENvZGUYASABKAkSGAoQc2hvcnREZXNjcmlwdGlvbhgCIAEoCRIW",
            "Cg5kZXNpZ25RdWFudGl0eRgDIAEoARIWCg5hY3R1YWxRdWFudGl0eRgEIAEo",
            "ARIZChF1bml0T2ZNZWFzdXJlbWVudBgFIAEoCRIXCgZmdHR4SUQYBiABKA4y",
            "By5GVFR4SUQSEQoDdGFnGAcgASgOMgQuVEFHEhEKA3NvcRgIIAMoCzIELlNv",
            "USKrAQoDU29REhMKC3NlcnZpY2VDb2RlGAEgASgJEhgKEHNob3J0RGVzY3Jp",
            "cHRpb24YAiABKAkSFgoOZGVzaWduUXVhbnRpdHkYAyABKAESFgoOYWN0dWFs",
            "UXVhbnRpdHkYBCABKAESGQoRdW5pdE9mTWVhc3VyZW1lbnQYBSABKAkSFwoG",
            "ZnR0eElEGAYgASgOMgcuRlRUeElEEhEKA3RhZxgHIAEoDjIELlRBRyr8AQoG",
            "RlRUeElEEgkKBU5PX0lEEAASEAoMSURfRVFVSVBNRU5UEAESEAoMSURfU1RS",
            "VUNUVVJFEAISCwoHSURfU1BBThADEhEKDUlEX1RSQU5TTUVESUEQBBIXChNJ",
            "RF9GU0FfTEVWRUxfTEVOR1RIEAUSGQoVSURfRlNBX0xFVkVMX1FVQU5USVRZ",
            "EAYSFwoTSURfRlNBX0xFVkVMX1ZPTFVNRRAHEhUKEUlEX1RSQU5TTUVESUFf",
            "TURVEAgSFQoRSURfU1BMSUNFX0NMT1NVUkUQCRIZChVJRF9BRVJJQUxfQUND",
            "RVNTT1JJRVMQChINCglJRF9QTFVHSU4QCyobCgNUQUcSCwoHREVGQVVMVBAA",
            "EgcKA05FVxABQjMKF2NvbS5tQ29uc3RydWN0LnByb3RvYnVmqgIXR3JwYy5j",
            "b25zdW1wdGlvbkJvb2tpbmdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Grpc.consumptionBooking.FTTxID), typeof(global::Grpc.consumptionBooking.TAG), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.consumptionBooking.BoQ), global::Grpc.consumptionBooking.BoQ.Parser, new[]{ "MatCode", "ShortDescription", "DesignQuantity", "ActualQuantity", "UnitOfMeasurement", "FttxID", "Tag", "Soq" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.consumptionBooking.SoQ), global::Grpc.consumptionBooking.SoQ.Parser, new[]{ "ServiceCode", "ShortDescription", "DesignQuantity", "ActualQuantity", "UnitOfMeasurement", "FttxID", "Tag" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum FTTxID {
    [pbr::OriginalName("NO_ID")] NoId = 0,
    [pbr::OriginalName("ID_EQUIPMENT")] IdEquipment = 1,
    [pbr::OriginalName("ID_STRUCTURE")] IdStructure = 2,
    [pbr::OriginalName("ID_SPAN")] IdSpan = 3,
    [pbr::OriginalName("ID_TRANSMEDIA")] IdTransmedia = 4,
    [pbr::OriginalName("ID_FSA_LEVEL_LENGTH")] IdFsaLevelLength = 5,
    [pbr::OriginalName("ID_FSA_LEVEL_QUANTITY")] IdFsaLevelQuantity = 6,
    [pbr::OriginalName("ID_FSA_LEVEL_VOLUME")] IdFsaLevelVolume = 7,
    [pbr::OriginalName("ID_TRANSMEDIA_MDU")] IdTransmediaMdu = 8,
    [pbr::OriginalName("ID_SPLICE_CLOSURE")] IdSpliceClosure = 9,
    [pbr::OriginalName("ID_AERIAL_ACCESSORIES")] IdAerialAccessories = 10,
    [pbr::OriginalName("ID_PLUGIN")] IdPlugin = 11,
  }

  public enum TAG {
    [pbr::OriginalName("DEFAULT")] Default = 0,
    [pbr::OriginalName("NEW")] New = 1,
  }

  #endregion

  #region Messages
  public sealed partial class BoQ : pb::IMessage<BoQ> {
    private static readonly pb::MessageParser<BoQ> _parser = new pb::MessageParser<BoQ>(() => new BoQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BoQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.consumptionBooking.ConsumptionBookingDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoQ(BoQ other) : this() {
      matCode_ = other.matCode_;
      shortDescription_ = other.shortDescription_;
      designQuantity_ = other.designQuantity_;
      actualQuantity_ = other.actualQuantity_;
      unitOfMeasurement_ = other.unitOfMeasurement_;
      fttxID_ = other.fttxID_;
      tag_ = other.tag_;
      soq_ = other.soq_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BoQ Clone() {
      return new BoQ(this);
    }

    /// <summary>Field number for the "matCode" field.</summary>
    public const int MatCodeFieldNumber = 1;
    private string matCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MatCode {
      get { return matCode_; }
      set {
        matCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shortDescription" field.</summary>
    public const int ShortDescriptionFieldNumber = 2;
    private string shortDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShortDescription {
      get { return shortDescription_; }
      set {
        shortDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "designQuantity" field.</summary>
    public const int DesignQuantityFieldNumber = 3;
    private double designQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DesignQuantity {
      get { return designQuantity_; }
      set {
        designQuantity_ = value;
      }
    }

    /// <summary>Field number for the "actualQuantity" field.</summary>
    public const int ActualQuantityFieldNumber = 4;
    private double actualQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ActualQuantity {
      get { return actualQuantity_; }
      set {
        actualQuantity_ = value;
      }
    }

    /// <summary>Field number for the "unitOfMeasurement" field.</summary>
    public const int UnitOfMeasurementFieldNumber = 5;
    private string unitOfMeasurement_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitOfMeasurement {
      get { return unitOfMeasurement_; }
      set {
        unitOfMeasurement_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fttxID" field.</summary>
    public const int FttxIDFieldNumber = 6;
    private global::Grpc.consumptionBooking.FTTxID fttxID_ = global::Grpc.consumptionBooking.FTTxID.NoId;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.consumptionBooking.FTTxID FttxID {
      get { return fttxID_; }
      set {
        fttxID_ = value;
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 7;
    private global::Grpc.consumptionBooking.TAG tag_ = global::Grpc.consumptionBooking.TAG.Default;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.consumptionBooking.TAG Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    /// <summary>Field number for the "soq" field.</summary>
    public const int SoqFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Grpc.consumptionBooking.SoQ> _repeated_soq_codec
        = pb::FieldCodec.ForMessage(66, global::Grpc.consumptionBooking.SoQ.Parser);
    private readonly pbc::RepeatedField<global::Grpc.consumptionBooking.SoQ> soq_ = new pbc::RepeatedField<global::Grpc.consumptionBooking.SoQ>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpc.consumptionBooking.SoQ> Soq {
      get { return soq_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BoQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BoQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MatCode != other.MatCode) return false;
      if (ShortDescription != other.ShortDescription) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DesignQuantity, other.DesignQuantity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ActualQuantity, other.ActualQuantity)) return false;
      if (UnitOfMeasurement != other.UnitOfMeasurement) return false;
      if (FttxID != other.FttxID) return false;
      if (Tag != other.Tag) return false;
      if(!soq_.Equals(other.soq_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MatCode.Length != 0) hash ^= MatCode.GetHashCode();
      if (ShortDescription.Length != 0) hash ^= ShortDescription.GetHashCode();
      if (DesignQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DesignQuantity);
      if (ActualQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ActualQuantity);
      if (UnitOfMeasurement.Length != 0) hash ^= UnitOfMeasurement.GetHashCode();
      if (FttxID != global::Grpc.consumptionBooking.FTTxID.NoId) hash ^= FttxID.GetHashCode();
      if (Tag != global::Grpc.consumptionBooking.TAG.Default) hash ^= Tag.GetHashCode();
      hash ^= soq_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MatCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MatCode);
      }
      if (ShortDescription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ShortDescription);
      }
      if (DesignQuantity != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(DesignQuantity);
      }
      if (ActualQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(ActualQuantity);
      }
      if (UnitOfMeasurement.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UnitOfMeasurement);
      }
      if (FttxID != global::Grpc.consumptionBooking.FTTxID.NoId) {
        output.WriteRawTag(48);
        output.WriteEnum((int) FttxID);
      }
      if (Tag != global::Grpc.consumptionBooking.TAG.Default) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Tag);
      }
      soq_.WriteTo(output, _repeated_soq_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MatCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MatCode);
      }
      if (ShortDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShortDescription);
      }
      if (DesignQuantity != 0D) {
        size += 1 + 8;
      }
      if (ActualQuantity != 0D) {
        size += 1 + 8;
      }
      if (UnitOfMeasurement.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitOfMeasurement);
      }
      if (FttxID != global::Grpc.consumptionBooking.FTTxID.NoId) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FttxID);
      }
      if (Tag != global::Grpc.consumptionBooking.TAG.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Tag);
      }
      size += soq_.CalculateSize(_repeated_soq_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BoQ other) {
      if (other == null) {
        return;
      }
      if (other.MatCode.Length != 0) {
        MatCode = other.MatCode;
      }
      if (other.ShortDescription.Length != 0) {
        ShortDescription = other.ShortDescription;
      }
      if (other.DesignQuantity != 0D) {
        DesignQuantity = other.DesignQuantity;
      }
      if (other.ActualQuantity != 0D) {
        ActualQuantity = other.ActualQuantity;
      }
      if (other.UnitOfMeasurement.Length != 0) {
        UnitOfMeasurement = other.UnitOfMeasurement;
      }
      if (other.FttxID != global::Grpc.consumptionBooking.FTTxID.NoId) {
        FttxID = other.FttxID;
      }
      if (other.Tag != global::Grpc.consumptionBooking.TAG.Default) {
        Tag = other.Tag;
      }
      soq_.Add(other.soq_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MatCode = input.ReadString();
            break;
          }
          case 18: {
            ShortDescription = input.ReadString();
            break;
          }
          case 25: {
            DesignQuantity = input.ReadDouble();
            break;
          }
          case 33: {
            ActualQuantity = input.ReadDouble();
            break;
          }
          case 42: {
            UnitOfMeasurement = input.ReadString();
            break;
          }
          case 48: {
            FttxID = (global::Grpc.consumptionBooking.FTTxID) input.ReadEnum();
            break;
          }
          case 56: {
            Tag = (global::Grpc.consumptionBooking.TAG) input.ReadEnum();
            break;
          }
          case 66: {
            soq_.AddEntriesFrom(input, _repeated_soq_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SoQ : pb::IMessage<SoQ> {
    private static readonly pb::MessageParser<SoQ> _parser = new pb::MessageParser<SoQ>(() => new SoQ());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SoQ> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.consumptionBooking.ConsumptionBookingDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoQ() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoQ(SoQ other) : this() {
      serviceCode_ = other.serviceCode_;
      shortDescription_ = other.shortDescription_;
      designQuantity_ = other.designQuantity_;
      actualQuantity_ = other.actualQuantity_;
      unitOfMeasurement_ = other.unitOfMeasurement_;
      fttxID_ = other.fttxID_;
      tag_ = other.tag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SoQ Clone() {
      return new SoQ(this);
    }

    /// <summary>Field number for the "serviceCode" field.</summary>
    public const int ServiceCodeFieldNumber = 1;
    private string serviceCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceCode {
      get { return serviceCode_; }
      set {
        serviceCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shortDescription" field.</summary>
    public const int ShortDescriptionFieldNumber = 2;
    private string shortDescription_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ShortDescription {
      get { return shortDescription_; }
      set {
        shortDescription_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "designQuantity" field.</summary>
    public const int DesignQuantityFieldNumber = 3;
    private double designQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DesignQuantity {
      get { return designQuantity_; }
      set {
        designQuantity_ = value;
      }
    }

    /// <summary>Field number for the "actualQuantity" field.</summary>
    public const int ActualQuantityFieldNumber = 4;
    private double actualQuantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double ActualQuantity {
      get { return actualQuantity_; }
      set {
        actualQuantity_ = value;
      }
    }

    /// <summary>Field number for the "unitOfMeasurement" field.</summary>
    public const int UnitOfMeasurementFieldNumber = 5;
    private string unitOfMeasurement_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnitOfMeasurement {
      get { return unitOfMeasurement_; }
      set {
        unitOfMeasurement_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fttxID" field.</summary>
    public const int FttxIDFieldNumber = 6;
    private global::Grpc.consumptionBooking.FTTxID fttxID_ = global::Grpc.consumptionBooking.FTTxID.NoId;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.consumptionBooking.FTTxID FttxID {
      get { return fttxID_; }
      set {
        fttxID_ = value;
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 7;
    private global::Grpc.consumptionBooking.TAG tag_ = global::Grpc.consumptionBooking.TAG.Default;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.consumptionBooking.TAG Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SoQ);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SoQ other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ServiceCode != other.ServiceCode) return false;
      if (ShortDescription != other.ShortDescription) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DesignQuantity, other.DesignQuantity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(ActualQuantity, other.ActualQuantity)) return false;
      if (UnitOfMeasurement != other.UnitOfMeasurement) return false;
      if (FttxID != other.FttxID) return false;
      if (Tag != other.Tag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ServiceCode.Length != 0) hash ^= ServiceCode.GetHashCode();
      if (ShortDescription.Length != 0) hash ^= ShortDescription.GetHashCode();
      if (DesignQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DesignQuantity);
      if (ActualQuantity != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(ActualQuantity);
      if (UnitOfMeasurement.Length != 0) hash ^= UnitOfMeasurement.GetHashCode();
      if (FttxID != global::Grpc.consumptionBooking.FTTxID.NoId) hash ^= FttxID.GetHashCode();
      if (Tag != global::Grpc.consumptionBooking.TAG.Default) hash ^= Tag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ServiceCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ServiceCode);
      }
      if (ShortDescription.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ShortDescription);
      }
      if (DesignQuantity != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(DesignQuantity);
      }
      if (ActualQuantity != 0D) {
        output.WriteRawTag(33);
        output.WriteDouble(ActualQuantity);
      }
      if (UnitOfMeasurement.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UnitOfMeasurement);
      }
      if (FttxID != global::Grpc.consumptionBooking.FTTxID.NoId) {
        output.WriteRawTag(48);
        output.WriteEnum((int) FttxID);
      }
      if (Tag != global::Grpc.consumptionBooking.TAG.Default) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ServiceCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceCode);
      }
      if (ShortDescription.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ShortDescription);
      }
      if (DesignQuantity != 0D) {
        size += 1 + 8;
      }
      if (ActualQuantity != 0D) {
        size += 1 + 8;
      }
      if (UnitOfMeasurement.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnitOfMeasurement);
      }
      if (FttxID != global::Grpc.consumptionBooking.FTTxID.NoId) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FttxID);
      }
      if (Tag != global::Grpc.consumptionBooking.TAG.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SoQ other) {
      if (other == null) {
        return;
      }
      if (other.ServiceCode.Length != 0) {
        ServiceCode = other.ServiceCode;
      }
      if (other.ShortDescription.Length != 0) {
        ShortDescription = other.ShortDescription;
      }
      if (other.DesignQuantity != 0D) {
        DesignQuantity = other.DesignQuantity;
      }
      if (other.ActualQuantity != 0D) {
        ActualQuantity = other.ActualQuantity;
      }
      if (other.UnitOfMeasurement.Length != 0) {
        UnitOfMeasurement = other.UnitOfMeasurement;
      }
      if (other.FttxID != global::Grpc.consumptionBooking.FTTxID.NoId) {
        FttxID = other.FttxID;
      }
      if (other.Tag != global::Grpc.consumptionBooking.TAG.Default) {
        Tag = other.Tag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ServiceCode = input.ReadString();
            break;
          }
          case 18: {
            ShortDescription = input.ReadString();
            break;
          }
          case 25: {
            DesignQuantity = input.ReadDouble();
            break;
          }
          case 33: {
            ActualQuantity = input.ReadDouble();
            break;
          }
          case 42: {
            UnitOfMeasurement = input.ReadString();
            break;
          }
          case 48: {
            FttxID = (global::Grpc.consumptionBooking.FTTxID) input.ReadEnum();
            break;
          }
          case 56: {
            Tag = (global::Grpc.consumptionBooking.TAG) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
