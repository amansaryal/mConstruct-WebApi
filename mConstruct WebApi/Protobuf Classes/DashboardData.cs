// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/DashboardData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grpc.services {

  /// <summary>Holder for reflection information generated from protos/DashboardData.proto</summary>
  public static partial class DashboardDataReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/DashboardData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DashboardDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpwcm90b3MvRGFzaGJvYXJkRGF0YS5wcm90byKcDAoNRGFzaGJvYXJkRGF0",
            "YRIvCgtmZURhc2hib2FyZBgBIAEoCzIaLkRhc2hib2FyZERhdGEuRkVEYXNo",
            "Ym9hcmQSLwoLcWVEYXNoYm9hcmQYAiABKAsyGi5EYXNoYm9hcmREYXRhLlFF",
            "RGFzaGJvYXJkEi8KC2lsRGFzaGJvYXJkGAMgASgLMhouRGFzaGJvYXJkRGF0",
            "YS5JTERhc2hib2FyZBqQCAoLRkVEYXNoYm9hcmQSSwoTdXBkYXRlQXNidWls",
            "dENvdW50cxgBIAEoCzIuLkRhc2hib2FyZERhdGEuRkVEYXNoYm9hcmQuVXBk",
            "YXRlQXNidWlsdENvdW50cxJHChFjcmVhdGVPZmZlckNvdW50cxgCIAEoCzIs",
            "LkRhc2hib2FyZERhdGEuRkVEYXNoYm9hcmQuQ3JlYXRlT2ZmZXJDb3VudHMS",
            "SwoTcmV2aWV3QXNidWlsdENvdW50cxgDIAEoCzIuLkRhc2hib2FyZERhdGEu",
            "RkVEYXNoYm9hcmQuUmV2aWV3QXNidWlsdENvdW50cxJHChFyZXZpZXdPZmZl",
            "ckNvdW50cxgEIAEoCzIsLkRhc2hib2FyZERhdGEuRkVEYXNoYm9hcmQuUmV2",
            "aWV3T2ZmZXJDb3VudHMSVQoYYnVpbGRpbmdQZXJtaXNzaW9uQ291bnRzGAUg",
            "ASgLMjMuRGFzaGJvYXJkRGF0YS5GRURhc2hib2FyZC5CdWlsZGluZ1Blcm1p",
            "c3Npb25Db3VudHMSWwobcHJpb3JpdHlCdWlsZGluZ1Rhc2tzQ291bnRzGAYg",
            "ASgLMjYuRGFzaGJvYXJkRGF0YS5GRURhc2hib2FyZC5Qcmlvcml0eUJ1aWxk",
            "aW5nVGFza3NDb3VudHMaUwoTVXBkYXRlQXNidWlsdENvdW50cxIQCghmc2FD",
            "b3VudBgBIAEoBRIQCghkc2FDb3VudBgCIAEoBRIYChBwZW5kaW5nVGFza0Nv",
            "dW50GAMgASgFGkEKEUNyZWF0ZU9mZmVyQ291bnRzEhAKCGZzYUNvdW50GAEg",
            "ASgFEhoKEmNvbXBsZXRlZFRhc2tDb3VudBgCIAEoBRpTChNSZXZpZXdBc2J1",
            "aWx0Q291bnRzEhAKCGZzYUNvdW50GAEgASgFEhAKCGRzYUNvdW50GAIgASgF",
            "EhgKEHBlbmRpbmdUYXNrQ291bnQYAyABKAUaWgoRUmV2aWV3T2ZmZXJDb3Vu",
            "dHMSEAoIZnNhQ291bnQYASABKAUSGAoQcmV2aWV3T2ZmZXJDb3VudBgCIAEo",
            "BRIZChFyZWplY3RlZFRhc2tDb3VudBgDIAEoBRqPAQoYQnVpbGRpbmdQZXJt",
            "aXNzaW9uQ291bnRzEhYKDnRvdGFsQnVpbGRpbmdzGAEgASgFEhkKEWFjcXVp",
            "cmVkQnVpbGRpbmdzGAIgASgFEhgKEHBlbmRpbmdCdWlsZGluZ3MYAyABKAUS",
            "JgoecGVybWlzc2lvbk5vdFJlcXVpcmVkQnVpbGRpbmdzGAQgASgFGkYKG1By",
            "aW9yaXR5QnVpbGRpbmdUYXNrc0NvdW50cxIWCg50b3RhbEJ1aWxkaW5ncxgB",
            "IAEoBRIPCgd0b3RhbFMyGAIgASgFGq8BCgtRRURhc2hib2FyZBJLChNyZXZp",
            "ZXdBc2J1aWx0Q291bnRzGAEgASgLMi4uRGFzaGJvYXJkRGF0YS5RRURhc2hi",
            "b2FyZC5SZXZpZXdBc2J1aWx0Q291bnRzGlMKE1Jldmlld0FzYnVpbHRDb3Vu",
            "dHMSEAoIZnNhQ291bnQYASABKAUSEAoIZHNhQ291bnQYAiABKAUSGAoQcGVu",
            "ZGluZ1Rhc2tDb3VudBgDIAEoBRqyAQoLSUxEYXNoYm9hcmQSRwoRcmV2aWV3",
            "T2ZmZXJDb3VudHMYASABKAsyLC5EYXNoYm9hcmREYXRhLklMRGFzaGJvYXJk",
            "LlJldmlld09mZmVyQ291bnRzGloKEVJldmlld09mZmVyQ291bnRzEhAKCGZz",
            "YUNvdW50GAEgASgFEhgKEHJldmlld09mZmVyQ291bnQYAiABKAUSGQoRcmVq",
            "ZWN0ZWRUYXNrQ291bnQYAyABKAVCKQoXY29tLm1Db25zdHJ1Y3QucHJvdG9i",
            "dWaqAg1HcnBjLnNlcnZpY2VzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.DashboardData), global::Grpc.services.DashboardData.Parser, new[]{ "FeDashboard", "QeDashboard", "IlDashboard" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.DashboardData.Types.FEDashboard), global::Grpc.services.DashboardData.Types.FEDashboard.Parser, new[]{ "UpdateAsbuiltCounts", "CreateOfferCounts", "ReviewAsbuiltCounts", "ReviewOfferCounts", "BuildingPermissionCounts", "PriorityBuildingTasksCounts" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.DashboardData.Types.FEDashboard.Types.UpdateAsbuiltCounts), global::Grpc.services.DashboardData.Types.FEDashboard.Types.UpdateAsbuiltCounts.Parser, new[]{ "FsaCount", "DsaCount", "PendingTaskCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.DashboardData.Types.FEDashboard.Types.CreateOfferCounts), global::Grpc.services.DashboardData.Types.FEDashboard.Types.CreateOfferCounts.Parser, new[]{ "FsaCount", "CompletedTaskCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.DashboardData.Types.FEDashboard.Types.ReviewAsbuiltCounts), global::Grpc.services.DashboardData.Types.FEDashboard.Types.ReviewAsbuiltCounts.Parser, new[]{ "FsaCount", "DsaCount", "PendingTaskCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.DashboardData.Types.FEDashboard.Types.ReviewOfferCounts), global::Grpc.services.DashboardData.Types.FEDashboard.Types.ReviewOfferCounts.Parser, new[]{ "FsaCount", "ReviewOfferCount", "RejectedTaskCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.DashboardData.Types.FEDashboard.Types.BuildingPermissionCounts), global::Grpc.services.DashboardData.Types.FEDashboard.Types.BuildingPermissionCounts.Parser, new[]{ "TotalBuildings", "AcquiredBuildings", "PendingBuildings", "PermissionNotRequiredBuildings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.DashboardData.Types.FEDashboard.Types.PriorityBuildingTasksCounts), global::Grpc.services.DashboardData.Types.FEDashboard.Types.PriorityBuildingTasksCounts.Parser, new[]{ "TotalBuildings", "TotalS2" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.DashboardData.Types.QEDashboard), global::Grpc.services.DashboardData.Types.QEDashboard.Parser, new[]{ "ReviewAsbuiltCounts" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.DashboardData.Types.QEDashboard.Types.ReviewAsbuiltCounts), global::Grpc.services.DashboardData.Types.QEDashboard.Types.ReviewAsbuiltCounts.Parser, new[]{ "FsaCount", "DsaCount", "PendingTaskCount" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.DashboardData.Types.ILDashboard), global::Grpc.services.DashboardData.Types.ILDashboard.Parser, new[]{ "ReviewOfferCounts" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.DashboardData.Types.ILDashboard.Types.ReviewOfferCounts), global::Grpc.services.DashboardData.Types.ILDashboard.Types.ReviewOfferCounts.Parser, new[]{ "FsaCount", "ReviewOfferCount", "RejectedTaskCount" }, null, null, null, null)})})
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DashboardData : pb::IMessage<DashboardData> {
    private static readonly pb::MessageParser<DashboardData> _parser = new pb::MessageParser<DashboardData>(() => new DashboardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DashboardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.DashboardDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DashboardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DashboardData(DashboardData other) : this() {
      feDashboard_ = other.feDashboard_ != null ? other.feDashboard_.Clone() : null;
      qeDashboard_ = other.qeDashboard_ != null ? other.qeDashboard_.Clone() : null;
      ilDashboard_ = other.ilDashboard_ != null ? other.ilDashboard_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DashboardData Clone() {
      return new DashboardData(this);
    }

    /// <summary>Field number for the "feDashboard" field.</summary>
    public const int FeDashboardFieldNumber = 1;
    private global::Grpc.services.DashboardData.Types.FEDashboard feDashboard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.DashboardData.Types.FEDashboard FeDashboard {
      get { return feDashboard_; }
      set {
        feDashboard_ = value;
      }
    }

    /// <summary>Field number for the "qeDashboard" field.</summary>
    public const int QeDashboardFieldNumber = 2;
    private global::Grpc.services.DashboardData.Types.QEDashboard qeDashboard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.DashboardData.Types.QEDashboard QeDashboard {
      get { return qeDashboard_; }
      set {
        qeDashboard_ = value;
      }
    }

    /// <summary>Field number for the "ilDashboard" field.</summary>
    public const int IlDashboardFieldNumber = 3;
    private global::Grpc.services.DashboardData.Types.ILDashboard ilDashboard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.DashboardData.Types.ILDashboard IlDashboard {
      get { return ilDashboard_; }
      set {
        ilDashboard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DashboardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DashboardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FeDashboard, other.FeDashboard)) return false;
      if (!object.Equals(QeDashboard, other.QeDashboard)) return false;
      if (!object.Equals(IlDashboard, other.IlDashboard)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (feDashboard_ != null) hash ^= FeDashboard.GetHashCode();
      if (qeDashboard_ != null) hash ^= QeDashboard.GetHashCode();
      if (ilDashboard_ != null) hash ^= IlDashboard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (feDashboard_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(FeDashboard);
      }
      if (qeDashboard_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(QeDashboard);
      }
      if (ilDashboard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(IlDashboard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (feDashboard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FeDashboard);
      }
      if (qeDashboard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QeDashboard);
      }
      if (ilDashboard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IlDashboard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DashboardData other) {
      if (other == null) {
        return;
      }
      if (other.feDashboard_ != null) {
        if (feDashboard_ == null) {
          FeDashboard = new global::Grpc.services.DashboardData.Types.FEDashboard();
        }
        FeDashboard.MergeFrom(other.FeDashboard);
      }
      if (other.qeDashboard_ != null) {
        if (qeDashboard_ == null) {
          QeDashboard = new global::Grpc.services.DashboardData.Types.QEDashboard();
        }
        QeDashboard.MergeFrom(other.QeDashboard);
      }
      if (other.ilDashboard_ != null) {
        if (ilDashboard_ == null) {
          IlDashboard = new global::Grpc.services.DashboardData.Types.ILDashboard();
        }
        IlDashboard.MergeFrom(other.IlDashboard);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (feDashboard_ == null) {
              FeDashboard = new global::Grpc.services.DashboardData.Types.FEDashboard();
            }
            input.ReadMessage(FeDashboard);
            break;
          }
          case 18: {
            if (qeDashboard_ == null) {
              QeDashboard = new global::Grpc.services.DashboardData.Types.QEDashboard();
            }
            input.ReadMessage(QeDashboard);
            break;
          }
          case 26: {
            if (ilDashboard_ == null) {
              IlDashboard = new global::Grpc.services.DashboardData.Types.ILDashboard();
            }
            input.ReadMessage(IlDashboard);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the DashboardData message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class FEDashboard : pb::IMessage<FEDashboard> {
        private static readonly pb::MessageParser<FEDashboard> _parser = new pb::MessageParser<FEDashboard>(() => new FEDashboard());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FEDashboard> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Grpc.services.DashboardData.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FEDashboard() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FEDashboard(FEDashboard other) : this() {
          updateAsbuiltCounts_ = other.updateAsbuiltCounts_ != null ? other.updateAsbuiltCounts_.Clone() : null;
          createOfferCounts_ = other.createOfferCounts_ != null ? other.createOfferCounts_.Clone() : null;
          reviewAsbuiltCounts_ = other.reviewAsbuiltCounts_ != null ? other.reviewAsbuiltCounts_.Clone() : null;
          reviewOfferCounts_ = other.reviewOfferCounts_ != null ? other.reviewOfferCounts_.Clone() : null;
          buildingPermissionCounts_ = other.buildingPermissionCounts_ != null ? other.buildingPermissionCounts_.Clone() : null;
          priorityBuildingTasksCounts_ = other.priorityBuildingTasksCounts_ != null ? other.priorityBuildingTasksCounts_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FEDashboard Clone() {
          return new FEDashboard(this);
        }

        /// <summary>Field number for the "updateAsbuiltCounts" field.</summary>
        public const int UpdateAsbuiltCountsFieldNumber = 1;
        private global::Grpc.services.DashboardData.Types.FEDashboard.Types.UpdateAsbuiltCounts updateAsbuiltCounts_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Grpc.services.DashboardData.Types.FEDashboard.Types.UpdateAsbuiltCounts UpdateAsbuiltCounts {
          get { return updateAsbuiltCounts_; }
          set {
            updateAsbuiltCounts_ = value;
          }
        }

        /// <summary>Field number for the "createOfferCounts" field.</summary>
        public const int CreateOfferCountsFieldNumber = 2;
        private global::Grpc.services.DashboardData.Types.FEDashboard.Types.CreateOfferCounts createOfferCounts_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Grpc.services.DashboardData.Types.FEDashboard.Types.CreateOfferCounts CreateOfferCounts {
          get { return createOfferCounts_; }
          set {
            createOfferCounts_ = value;
          }
        }

        /// <summary>Field number for the "reviewAsbuiltCounts" field.</summary>
        public const int ReviewAsbuiltCountsFieldNumber = 3;
        private global::Grpc.services.DashboardData.Types.FEDashboard.Types.ReviewAsbuiltCounts reviewAsbuiltCounts_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Grpc.services.DashboardData.Types.FEDashboard.Types.ReviewAsbuiltCounts ReviewAsbuiltCounts {
          get { return reviewAsbuiltCounts_; }
          set {
            reviewAsbuiltCounts_ = value;
          }
        }

        /// <summary>Field number for the "reviewOfferCounts" field.</summary>
        public const int ReviewOfferCountsFieldNumber = 4;
        private global::Grpc.services.DashboardData.Types.FEDashboard.Types.ReviewOfferCounts reviewOfferCounts_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Grpc.services.DashboardData.Types.FEDashboard.Types.ReviewOfferCounts ReviewOfferCounts {
          get { return reviewOfferCounts_; }
          set {
            reviewOfferCounts_ = value;
          }
        }

        /// <summary>Field number for the "buildingPermissionCounts" field.</summary>
        public const int BuildingPermissionCountsFieldNumber = 5;
        private global::Grpc.services.DashboardData.Types.FEDashboard.Types.BuildingPermissionCounts buildingPermissionCounts_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Grpc.services.DashboardData.Types.FEDashboard.Types.BuildingPermissionCounts BuildingPermissionCounts {
          get { return buildingPermissionCounts_; }
          set {
            buildingPermissionCounts_ = value;
          }
        }

        /// <summary>Field number for the "priorityBuildingTasksCounts" field.</summary>
        public const int PriorityBuildingTasksCountsFieldNumber = 6;
        private global::Grpc.services.DashboardData.Types.FEDashboard.Types.PriorityBuildingTasksCounts priorityBuildingTasksCounts_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Grpc.services.DashboardData.Types.FEDashboard.Types.PriorityBuildingTasksCounts PriorityBuildingTasksCounts {
          get { return priorityBuildingTasksCounts_; }
          set {
            priorityBuildingTasksCounts_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FEDashboard);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FEDashboard other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(UpdateAsbuiltCounts, other.UpdateAsbuiltCounts)) return false;
          if (!object.Equals(CreateOfferCounts, other.CreateOfferCounts)) return false;
          if (!object.Equals(ReviewAsbuiltCounts, other.ReviewAsbuiltCounts)) return false;
          if (!object.Equals(ReviewOfferCounts, other.ReviewOfferCounts)) return false;
          if (!object.Equals(BuildingPermissionCounts, other.BuildingPermissionCounts)) return false;
          if (!object.Equals(PriorityBuildingTasksCounts, other.PriorityBuildingTasksCounts)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (updateAsbuiltCounts_ != null) hash ^= UpdateAsbuiltCounts.GetHashCode();
          if (createOfferCounts_ != null) hash ^= CreateOfferCounts.GetHashCode();
          if (reviewAsbuiltCounts_ != null) hash ^= ReviewAsbuiltCounts.GetHashCode();
          if (reviewOfferCounts_ != null) hash ^= ReviewOfferCounts.GetHashCode();
          if (buildingPermissionCounts_ != null) hash ^= BuildingPermissionCounts.GetHashCode();
          if (priorityBuildingTasksCounts_ != null) hash ^= PriorityBuildingTasksCounts.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (updateAsbuiltCounts_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(UpdateAsbuiltCounts);
          }
          if (createOfferCounts_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(CreateOfferCounts);
          }
          if (reviewAsbuiltCounts_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(ReviewAsbuiltCounts);
          }
          if (reviewOfferCounts_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(ReviewOfferCounts);
          }
          if (buildingPermissionCounts_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(BuildingPermissionCounts);
          }
          if (priorityBuildingTasksCounts_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(PriorityBuildingTasksCounts);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (updateAsbuiltCounts_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateAsbuiltCounts);
          }
          if (createOfferCounts_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateOfferCounts);
          }
          if (reviewAsbuiltCounts_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReviewAsbuiltCounts);
          }
          if (reviewOfferCounts_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReviewOfferCounts);
          }
          if (buildingPermissionCounts_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BuildingPermissionCounts);
          }
          if (priorityBuildingTasksCounts_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriorityBuildingTasksCounts);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FEDashboard other) {
          if (other == null) {
            return;
          }
          if (other.updateAsbuiltCounts_ != null) {
            if (updateAsbuiltCounts_ == null) {
              UpdateAsbuiltCounts = new global::Grpc.services.DashboardData.Types.FEDashboard.Types.UpdateAsbuiltCounts();
            }
            UpdateAsbuiltCounts.MergeFrom(other.UpdateAsbuiltCounts);
          }
          if (other.createOfferCounts_ != null) {
            if (createOfferCounts_ == null) {
              CreateOfferCounts = new global::Grpc.services.DashboardData.Types.FEDashboard.Types.CreateOfferCounts();
            }
            CreateOfferCounts.MergeFrom(other.CreateOfferCounts);
          }
          if (other.reviewAsbuiltCounts_ != null) {
            if (reviewAsbuiltCounts_ == null) {
              ReviewAsbuiltCounts = new global::Grpc.services.DashboardData.Types.FEDashboard.Types.ReviewAsbuiltCounts();
            }
            ReviewAsbuiltCounts.MergeFrom(other.ReviewAsbuiltCounts);
          }
          if (other.reviewOfferCounts_ != null) {
            if (reviewOfferCounts_ == null) {
              ReviewOfferCounts = new global::Grpc.services.DashboardData.Types.FEDashboard.Types.ReviewOfferCounts();
            }
            ReviewOfferCounts.MergeFrom(other.ReviewOfferCounts);
          }
          if (other.buildingPermissionCounts_ != null) {
            if (buildingPermissionCounts_ == null) {
              BuildingPermissionCounts = new global::Grpc.services.DashboardData.Types.FEDashboard.Types.BuildingPermissionCounts();
            }
            BuildingPermissionCounts.MergeFrom(other.BuildingPermissionCounts);
          }
          if (other.priorityBuildingTasksCounts_ != null) {
            if (priorityBuildingTasksCounts_ == null) {
              PriorityBuildingTasksCounts = new global::Grpc.services.DashboardData.Types.FEDashboard.Types.PriorityBuildingTasksCounts();
            }
            PriorityBuildingTasksCounts.MergeFrom(other.PriorityBuildingTasksCounts);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (updateAsbuiltCounts_ == null) {
                  UpdateAsbuiltCounts = new global::Grpc.services.DashboardData.Types.FEDashboard.Types.UpdateAsbuiltCounts();
                }
                input.ReadMessage(UpdateAsbuiltCounts);
                break;
              }
              case 18: {
                if (createOfferCounts_ == null) {
                  CreateOfferCounts = new global::Grpc.services.DashboardData.Types.FEDashboard.Types.CreateOfferCounts();
                }
                input.ReadMessage(CreateOfferCounts);
                break;
              }
              case 26: {
                if (reviewAsbuiltCounts_ == null) {
                  ReviewAsbuiltCounts = new global::Grpc.services.DashboardData.Types.FEDashboard.Types.ReviewAsbuiltCounts();
                }
                input.ReadMessage(ReviewAsbuiltCounts);
                break;
              }
              case 34: {
                if (reviewOfferCounts_ == null) {
                  ReviewOfferCounts = new global::Grpc.services.DashboardData.Types.FEDashboard.Types.ReviewOfferCounts();
                }
                input.ReadMessage(ReviewOfferCounts);
                break;
              }
              case 42: {
                if (buildingPermissionCounts_ == null) {
                  BuildingPermissionCounts = new global::Grpc.services.DashboardData.Types.FEDashboard.Types.BuildingPermissionCounts();
                }
                input.ReadMessage(BuildingPermissionCounts);
                break;
              }
              case 50: {
                if (priorityBuildingTasksCounts_ == null) {
                  PriorityBuildingTasksCounts = new global::Grpc.services.DashboardData.Types.FEDashboard.Types.PriorityBuildingTasksCounts();
                }
                input.ReadMessage(PriorityBuildingTasksCounts);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the FEDashboard message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class UpdateAsbuiltCounts : pb::IMessage<UpdateAsbuiltCounts> {
            private static readonly pb::MessageParser<UpdateAsbuiltCounts> _parser = new pb::MessageParser<UpdateAsbuiltCounts>(() => new UpdateAsbuiltCounts());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<UpdateAsbuiltCounts> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Grpc.services.DashboardData.Types.FEDashboard.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UpdateAsbuiltCounts() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UpdateAsbuiltCounts(UpdateAsbuiltCounts other) : this() {
              fsaCount_ = other.fsaCount_;
              dsaCount_ = other.dsaCount_;
              pendingTaskCount_ = other.pendingTaskCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public UpdateAsbuiltCounts Clone() {
              return new UpdateAsbuiltCounts(this);
            }

            /// <summary>Field number for the "fsaCount" field.</summary>
            public const int FsaCountFieldNumber = 1;
            private int fsaCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int FsaCount {
              get { return fsaCount_; }
              set {
                fsaCount_ = value;
              }
            }

            /// <summary>Field number for the "dsaCount" field.</summary>
            public const int DsaCountFieldNumber = 2;
            private int dsaCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int DsaCount {
              get { return dsaCount_; }
              set {
                dsaCount_ = value;
              }
            }

            /// <summary>Field number for the "pendingTaskCount" field.</summary>
            public const int PendingTaskCountFieldNumber = 3;
            private int pendingTaskCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int PendingTaskCount {
              get { return pendingTaskCount_; }
              set {
                pendingTaskCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as UpdateAsbuiltCounts);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(UpdateAsbuiltCounts other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (FsaCount != other.FsaCount) return false;
              if (DsaCount != other.DsaCount) return false;
              if (PendingTaskCount != other.PendingTaskCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (FsaCount != 0) hash ^= FsaCount.GetHashCode();
              if (DsaCount != 0) hash ^= DsaCount.GetHashCode();
              if (PendingTaskCount != 0) hash ^= PendingTaskCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (FsaCount != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(FsaCount);
              }
              if (DsaCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(DsaCount);
              }
              if (PendingTaskCount != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(PendingTaskCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (FsaCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(FsaCount);
              }
              if (DsaCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(DsaCount);
              }
              if (PendingTaskCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PendingTaskCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(UpdateAsbuiltCounts other) {
              if (other == null) {
                return;
              }
              if (other.FsaCount != 0) {
                FsaCount = other.FsaCount;
              }
              if (other.DsaCount != 0) {
                DsaCount = other.DsaCount;
              }
              if (other.PendingTaskCount != 0) {
                PendingTaskCount = other.PendingTaskCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    FsaCount = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    DsaCount = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    PendingTaskCount = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class CreateOfferCounts : pb::IMessage<CreateOfferCounts> {
            private static readonly pb::MessageParser<CreateOfferCounts> _parser = new pb::MessageParser<CreateOfferCounts>(() => new CreateOfferCounts());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<CreateOfferCounts> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Grpc.services.DashboardData.Types.FEDashboard.Descriptor.NestedTypes[1]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CreateOfferCounts() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CreateOfferCounts(CreateOfferCounts other) : this() {
              fsaCount_ = other.fsaCount_;
              completedTaskCount_ = other.completedTaskCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public CreateOfferCounts Clone() {
              return new CreateOfferCounts(this);
            }

            /// <summary>Field number for the "fsaCount" field.</summary>
            public const int FsaCountFieldNumber = 1;
            private int fsaCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int FsaCount {
              get { return fsaCount_; }
              set {
                fsaCount_ = value;
              }
            }

            /// <summary>Field number for the "completedTaskCount" field.</summary>
            public const int CompletedTaskCountFieldNumber = 2;
            private int completedTaskCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CompletedTaskCount {
              get { return completedTaskCount_; }
              set {
                completedTaskCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as CreateOfferCounts);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(CreateOfferCounts other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (FsaCount != other.FsaCount) return false;
              if (CompletedTaskCount != other.CompletedTaskCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (FsaCount != 0) hash ^= FsaCount.GetHashCode();
              if (CompletedTaskCount != 0) hash ^= CompletedTaskCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (FsaCount != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(FsaCount);
              }
              if (CompletedTaskCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(CompletedTaskCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (FsaCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(FsaCount);
              }
              if (CompletedTaskCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(CompletedTaskCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(CreateOfferCounts other) {
              if (other == null) {
                return;
              }
              if (other.FsaCount != 0) {
                FsaCount = other.FsaCount;
              }
              if (other.CompletedTaskCount != 0) {
                CompletedTaskCount = other.CompletedTaskCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    FsaCount = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    CompletedTaskCount = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ReviewAsbuiltCounts : pb::IMessage<ReviewAsbuiltCounts> {
            private static readonly pb::MessageParser<ReviewAsbuiltCounts> _parser = new pb::MessageParser<ReviewAsbuiltCounts>(() => new ReviewAsbuiltCounts());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ReviewAsbuiltCounts> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Grpc.services.DashboardData.Types.FEDashboard.Descriptor.NestedTypes[2]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ReviewAsbuiltCounts() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ReviewAsbuiltCounts(ReviewAsbuiltCounts other) : this() {
              fsaCount_ = other.fsaCount_;
              dsaCount_ = other.dsaCount_;
              pendingTaskCount_ = other.pendingTaskCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ReviewAsbuiltCounts Clone() {
              return new ReviewAsbuiltCounts(this);
            }

            /// <summary>Field number for the "fsaCount" field.</summary>
            public const int FsaCountFieldNumber = 1;
            private int fsaCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int FsaCount {
              get { return fsaCount_; }
              set {
                fsaCount_ = value;
              }
            }

            /// <summary>Field number for the "dsaCount" field.</summary>
            public const int DsaCountFieldNumber = 2;
            private int dsaCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int DsaCount {
              get { return dsaCount_; }
              set {
                dsaCount_ = value;
              }
            }

            /// <summary>Field number for the "pendingTaskCount" field.</summary>
            public const int PendingTaskCountFieldNumber = 3;
            private int pendingTaskCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int PendingTaskCount {
              get { return pendingTaskCount_; }
              set {
                pendingTaskCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ReviewAsbuiltCounts);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ReviewAsbuiltCounts other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (FsaCount != other.FsaCount) return false;
              if (DsaCount != other.DsaCount) return false;
              if (PendingTaskCount != other.PendingTaskCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (FsaCount != 0) hash ^= FsaCount.GetHashCode();
              if (DsaCount != 0) hash ^= DsaCount.GetHashCode();
              if (PendingTaskCount != 0) hash ^= PendingTaskCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (FsaCount != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(FsaCount);
              }
              if (DsaCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(DsaCount);
              }
              if (PendingTaskCount != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(PendingTaskCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (FsaCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(FsaCount);
              }
              if (DsaCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(DsaCount);
              }
              if (PendingTaskCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PendingTaskCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ReviewAsbuiltCounts other) {
              if (other == null) {
                return;
              }
              if (other.FsaCount != 0) {
                FsaCount = other.FsaCount;
              }
              if (other.DsaCount != 0) {
                DsaCount = other.DsaCount;
              }
              if (other.PendingTaskCount != 0) {
                PendingTaskCount = other.PendingTaskCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    FsaCount = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    DsaCount = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    PendingTaskCount = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class ReviewOfferCounts : pb::IMessage<ReviewOfferCounts> {
            private static readonly pb::MessageParser<ReviewOfferCounts> _parser = new pb::MessageParser<ReviewOfferCounts>(() => new ReviewOfferCounts());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ReviewOfferCounts> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Grpc.services.DashboardData.Types.FEDashboard.Descriptor.NestedTypes[3]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ReviewOfferCounts() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ReviewOfferCounts(ReviewOfferCounts other) : this() {
              fsaCount_ = other.fsaCount_;
              reviewOfferCount_ = other.reviewOfferCount_;
              rejectedTaskCount_ = other.rejectedTaskCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ReviewOfferCounts Clone() {
              return new ReviewOfferCounts(this);
            }

            /// <summary>Field number for the "fsaCount" field.</summary>
            public const int FsaCountFieldNumber = 1;
            private int fsaCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int FsaCount {
              get { return fsaCount_; }
              set {
                fsaCount_ = value;
              }
            }

            /// <summary>Field number for the "reviewOfferCount" field.</summary>
            public const int ReviewOfferCountFieldNumber = 2;
            private int reviewOfferCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int ReviewOfferCount {
              get { return reviewOfferCount_; }
              set {
                reviewOfferCount_ = value;
              }
            }

            /// <summary>Field number for the "rejectedTaskCount" field.</summary>
            public const int RejectedTaskCountFieldNumber = 3;
            private int rejectedTaskCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int RejectedTaskCount {
              get { return rejectedTaskCount_; }
              set {
                rejectedTaskCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ReviewOfferCounts);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ReviewOfferCounts other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (FsaCount != other.FsaCount) return false;
              if (ReviewOfferCount != other.ReviewOfferCount) return false;
              if (RejectedTaskCount != other.RejectedTaskCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (FsaCount != 0) hash ^= FsaCount.GetHashCode();
              if (ReviewOfferCount != 0) hash ^= ReviewOfferCount.GetHashCode();
              if (RejectedTaskCount != 0) hash ^= RejectedTaskCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (FsaCount != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(FsaCount);
              }
              if (ReviewOfferCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(ReviewOfferCount);
              }
              if (RejectedTaskCount != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(RejectedTaskCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (FsaCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(FsaCount);
              }
              if (ReviewOfferCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReviewOfferCount);
              }
              if (RejectedTaskCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(RejectedTaskCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ReviewOfferCounts other) {
              if (other == null) {
                return;
              }
              if (other.FsaCount != 0) {
                FsaCount = other.FsaCount;
              }
              if (other.ReviewOfferCount != 0) {
                ReviewOfferCount = other.ReviewOfferCount;
              }
              if (other.RejectedTaskCount != 0) {
                RejectedTaskCount = other.RejectedTaskCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    FsaCount = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    ReviewOfferCount = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    RejectedTaskCount = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class BuildingPermissionCounts : pb::IMessage<BuildingPermissionCounts> {
            private static readonly pb::MessageParser<BuildingPermissionCounts> _parser = new pb::MessageParser<BuildingPermissionCounts>(() => new BuildingPermissionCounts());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<BuildingPermissionCounts> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Grpc.services.DashboardData.Types.FEDashboard.Descriptor.NestedTypes[4]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public BuildingPermissionCounts() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public BuildingPermissionCounts(BuildingPermissionCounts other) : this() {
              totalBuildings_ = other.totalBuildings_;
              acquiredBuildings_ = other.acquiredBuildings_;
              pendingBuildings_ = other.pendingBuildings_;
              permissionNotRequiredBuildings_ = other.permissionNotRequiredBuildings_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public BuildingPermissionCounts Clone() {
              return new BuildingPermissionCounts(this);
            }

            /// <summary>Field number for the "totalBuildings" field.</summary>
            public const int TotalBuildingsFieldNumber = 1;
            private int totalBuildings_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int TotalBuildings {
              get { return totalBuildings_; }
              set {
                totalBuildings_ = value;
              }
            }

            /// <summary>Field number for the "acquiredBuildings" field.</summary>
            public const int AcquiredBuildingsFieldNumber = 2;
            private int acquiredBuildings_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int AcquiredBuildings {
              get { return acquiredBuildings_; }
              set {
                acquiredBuildings_ = value;
              }
            }

            /// <summary>Field number for the "pendingBuildings" field.</summary>
            public const int PendingBuildingsFieldNumber = 3;
            private int pendingBuildings_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int PendingBuildings {
              get { return pendingBuildings_; }
              set {
                pendingBuildings_ = value;
              }
            }

            /// <summary>Field number for the "permissionNotRequiredBuildings" field.</summary>
            public const int PermissionNotRequiredBuildingsFieldNumber = 4;
            private int permissionNotRequiredBuildings_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int PermissionNotRequiredBuildings {
              get { return permissionNotRequiredBuildings_; }
              set {
                permissionNotRequiredBuildings_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as BuildingPermissionCounts);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(BuildingPermissionCounts other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (TotalBuildings != other.TotalBuildings) return false;
              if (AcquiredBuildings != other.AcquiredBuildings) return false;
              if (PendingBuildings != other.PendingBuildings) return false;
              if (PermissionNotRequiredBuildings != other.PermissionNotRequiredBuildings) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (TotalBuildings != 0) hash ^= TotalBuildings.GetHashCode();
              if (AcquiredBuildings != 0) hash ^= AcquiredBuildings.GetHashCode();
              if (PendingBuildings != 0) hash ^= PendingBuildings.GetHashCode();
              if (PermissionNotRequiredBuildings != 0) hash ^= PermissionNotRequiredBuildings.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (TotalBuildings != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(TotalBuildings);
              }
              if (AcquiredBuildings != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(AcquiredBuildings);
              }
              if (PendingBuildings != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(PendingBuildings);
              }
              if (PermissionNotRequiredBuildings != 0) {
                output.WriteRawTag(32);
                output.WriteInt32(PermissionNotRequiredBuildings);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (TotalBuildings != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalBuildings);
              }
              if (AcquiredBuildings != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(AcquiredBuildings);
              }
              if (PendingBuildings != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PendingBuildings);
              }
              if (PermissionNotRequiredBuildings != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PermissionNotRequiredBuildings);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(BuildingPermissionCounts other) {
              if (other == null) {
                return;
              }
              if (other.TotalBuildings != 0) {
                TotalBuildings = other.TotalBuildings;
              }
              if (other.AcquiredBuildings != 0) {
                AcquiredBuildings = other.AcquiredBuildings;
              }
              if (other.PendingBuildings != 0) {
                PendingBuildings = other.PendingBuildings;
              }
              if (other.PermissionNotRequiredBuildings != 0) {
                PermissionNotRequiredBuildings = other.PermissionNotRequiredBuildings;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    TotalBuildings = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    AcquiredBuildings = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    PendingBuildings = input.ReadInt32();
                    break;
                  }
                  case 32: {
                    PermissionNotRequiredBuildings = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

          public sealed partial class PriorityBuildingTasksCounts : pb::IMessage<PriorityBuildingTasksCounts> {
            private static readonly pb::MessageParser<PriorityBuildingTasksCounts> _parser = new pb::MessageParser<PriorityBuildingTasksCounts>(() => new PriorityBuildingTasksCounts());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<PriorityBuildingTasksCounts> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Grpc.services.DashboardData.Types.FEDashboard.Descriptor.NestedTypes[5]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PriorityBuildingTasksCounts() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PriorityBuildingTasksCounts(PriorityBuildingTasksCounts other) : this() {
              totalBuildings_ = other.totalBuildings_;
              totalS2_ = other.totalS2_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public PriorityBuildingTasksCounts Clone() {
              return new PriorityBuildingTasksCounts(this);
            }

            /// <summary>Field number for the "totalBuildings" field.</summary>
            public const int TotalBuildingsFieldNumber = 1;
            private int totalBuildings_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int TotalBuildings {
              get { return totalBuildings_; }
              set {
                totalBuildings_ = value;
              }
            }

            /// <summary>Field number for the "totalS2" field.</summary>
            public const int TotalS2FieldNumber = 2;
            private int totalS2_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int TotalS2 {
              get { return totalS2_; }
              set {
                totalS2_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as PriorityBuildingTasksCounts);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(PriorityBuildingTasksCounts other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (TotalBuildings != other.TotalBuildings) return false;
              if (TotalS2 != other.TotalS2) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (TotalBuildings != 0) hash ^= TotalBuildings.GetHashCode();
              if (TotalS2 != 0) hash ^= TotalS2.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (TotalBuildings != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(TotalBuildings);
              }
              if (TotalS2 != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(TotalS2);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (TotalBuildings != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalBuildings);
              }
              if (TotalS2 != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalS2);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(PriorityBuildingTasksCounts other) {
              if (other == null) {
                return;
              }
              if (other.TotalBuildings != 0) {
                TotalBuildings = other.TotalBuildings;
              }
              if (other.TotalS2 != 0) {
                TotalS2 = other.TotalS2;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    TotalBuildings = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    TotalS2 = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class QEDashboard : pb::IMessage<QEDashboard> {
        private static readonly pb::MessageParser<QEDashboard> _parser = new pb::MessageParser<QEDashboard>(() => new QEDashboard());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<QEDashboard> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Grpc.services.DashboardData.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QEDashboard() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QEDashboard(QEDashboard other) : this() {
          reviewAsbuiltCounts_ = other.reviewAsbuiltCounts_ != null ? other.reviewAsbuiltCounts_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public QEDashboard Clone() {
          return new QEDashboard(this);
        }

        /// <summary>Field number for the "reviewAsbuiltCounts" field.</summary>
        public const int ReviewAsbuiltCountsFieldNumber = 1;
        private global::Grpc.services.DashboardData.Types.QEDashboard.Types.ReviewAsbuiltCounts reviewAsbuiltCounts_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Grpc.services.DashboardData.Types.QEDashboard.Types.ReviewAsbuiltCounts ReviewAsbuiltCounts {
          get { return reviewAsbuiltCounts_; }
          set {
            reviewAsbuiltCounts_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as QEDashboard);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(QEDashboard other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ReviewAsbuiltCounts, other.ReviewAsbuiltCounts)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (reviewAsbuiltCounts_ != null) hash ^= ReviewAsbuiltCounts.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (reviewAsbuiltCounts_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ReviewAsbuiltCounts);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (reviewAsbuiltCounts_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReviewAsbuiltCounts);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(QEDashboard other) {
          if (other == null) {
            return;
          }
          if (other.reviewAsbuiltCounts_ != null) {
            if (reviewAsbuiltCounts_ == null) {
              ReviewAsbuiltCounts = new global::Grpc.services.DashboardData.Types.QEDashboard.Types.ReviewAsbuiltCounts();
            }
            ReviewAsbuiltCounts.MergeFrom(other.ReviewAsbuiltCounts);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (reviewAsbuiltCounts_ == null) {
                  ReviewAsbuiltCounts = new global::Grpc.services.DashboardData.Types.QEDashboard.Types.ReviewAsbuiltCounts();
                }
                input.ReadMessage(ReviewAsbuiltCounts);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the QEDashboard message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class ReviewAsbuiltCounts : pb::IMessage<ReviewAsbuiltCounts> {
            private static readonly pb::MessageParser<ReviewAsbuiltCounts> _parser = new pb::MessageParser<ReviewAsbuiltCounts>(() => new ReviewAsbuiltCounts());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ReviewAsbuiltCounts> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Grpc.services.DashboardData.Types.QEDashboard.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ReviewAsbuiltCounts() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ReviewAsbuiltCounts(ReviewAsbuiltCounts other) : this() {
              fsaCount_ = other.fsaCount_;
              dsaCount_ = other.dsaCount_;
              pendingTaskCount_ = other.pendingTaskCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ReviewAsbuiltCounts Clone() {
              return new ReviewAsbuiltCounts(this);
            }

            /// <summary>Field number for the "fsaCount" field.</summary>
            public const int FsaCountFieldNumber = 1;
            private int fsaCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int FsaCount {
              get { return fsaCount_; }
              set {
                fsaCount_ = value;
              }
            }

            /// <summary>Field number for the "dsaCount" field.</summary>
            public const int DsaCountFieldNumber = 2;
            private int dsaCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int DsaCount {
              get { return dsaCount_; }
              set {
                dsaCount_ = value;
              }
            }

            /// <summary>Field number for the "pendingTaskCount" field.</summary>
            public const int PendingTaskCountFieldNumber = 3;
            private int pendingTaskCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int PendingTaskCount {
              get { return pendingTaskCount_; }
              set {
                pendingTaskCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ReviewAsbuiltCounts);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ReviewAsbuiltCounts other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (FsaCount != other.FsaCount) return false;
              if (DsaCount != other.DsaCount) return false;
              if (PendingTaskCount != other.PendingTaskCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (FsaCount != 0) hash ^= FsaCount.GetHashCode();
              if (DsaCount != 0) hash ^= DsaCount.GetHashCode();
              if (PendingTaskCount != 0) hash ^= PendingTaskCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (FsaCount != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(FsaCount);
              }
              if (DsaCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(DsaCount);
              }
              if (PendingTaskCount != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(PendingTaskCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (FsaCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(FsaCount);
              }
              if (DsaCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(DsaCount);
              }
              if (PendingTaskCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(PendingTaskCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ReviewAsbuiltCounts other) {
              if (other == null) {
                return;
              }
              if (other.FsaCount != 0) {
                FsaCount = other.FsaCount;
              }
              if (other.DsaCount != 0) {
                DsaCount = other.DsaCount;
              }
              if (other.PendingTaskCount != 0) {
                PendingTaskCount = other.PendingTaskCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    FsaCount = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    DsaCount = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    PendingTaskCount = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

      public sealed partial class ILDashboard : pb::IMessage<ILDashboard> {
        private static readonly pb::MessageParser<ILDashboard> _parser = new pb::MessageParser<ILDashboard>(() => new ILDashboard());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ILDashboard> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Grpc.services.DashboardData.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ILDashboard() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ILDashboard(ILDashboard other) : this() {
          reviewOfferCounts_ = other.reviewOfferCounts_ != null ? other.reviewOfferCounts_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ILDashboard Clone() {
          return new ILDashboard(this);
        }

        /// <summary>Field number for the "reviewOfferCounts" field.</summary>
        public const int ReviewOfferCountsFieldNumber = 1;
        private global::Grpc.services.DashboardData.Types.ILDashboard.Types.ReviewOfferCounts reviewOfferCounts_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Grpc.services.DashboardData.Types.ILDashboard.Types.ReviewOfferCounts ReviewOfferCounts {
          get { return reviewOfferCounts_; }
          set {
            reviewOfferCounts_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ILDashboard);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ILDashboard other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(ReviewOfferCounts, other.ReviewOfferCounts)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (reviewOfferCounts_ != null) hash ^= ReviewOfferCounts.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (reviewOfferCounts_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(ReviewOfferCounts);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (reviewOfferCounts_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReviewOfferCounts);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ILDashboard other) {
          if (other == null) {
            return;
          }
          if (other.reviewOfferCounts_ != null) {
            if (reviewOfferCounts_ == null) {
              ReviewOfferCounts = new global::Grpc.services.DashboardData.Types.ILDashboard.Types.ReviewOfferCounts();
            }
            ReviewOfferCounts.MergeFrom(other.ReviewOfferCounts);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (reviewOfferCounts_ == null) {
                  ReviewOfferCounts = new global::Grpc.services.DashboardData.Types.ILDashboard.Types.ReviewOfferCounts();
                }
                input.ReadMessage(ReviewOfferCounts);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ILDashboard message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class ReviewOfferCounts : pb::IMessage<ReviewOfferCounts> {
            private static readonly pb::MessageParser<ReviewOfferCounts> _parser = new pb::MessageParser<ReviewOfferCounts>(() => new ReviewOfferCounts());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<ReviewOfferCounts> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Grpc.services.DashboardData.Types.ILDashboard.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ReviewOfferCounts() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ReviewOfferCounts(ReviewOfferCounts other) : this() {
              fsaCount_ = other.fsaCount_;
              reviewOfferCount_ = other.reviewOfferCount_;
              rejectedTaskCount_ = other.rejectedTaskCount_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public ReviewOfferCounts Clone() {
              return new ReviewOfferCounts(this);
            }

            /// <summary>Field number for the "fsaCount" field.</summary>
            public const int FsaCountFieldNumber = 1;
            private int fsaCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int FsaCount {
              get { return fsaCount_; }
              set {
                fsaCount_ = value;
              }
            }

            /// <summary>Field number for the "reviewOfferCount" field.</summary>
            public const int ReviewOfferCountFieldNumber = 2;
            private int reviewOfferCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int ReviewOfferCount {
              get { return reviewOfferCount_; }
              set {
                reviewOfferCount_ = value;
              }
            }

            /// <summary>Field number for the "rejectedTaskCount" field.</summary>
            public const int RejectedTaskCountFieldNumber = 3;
            private int rejectedTaskCount_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int RejectedTaskCount {
              get { return rejectedTaskCount_; }
              set {
                rejectedTaskCount_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as ReviewOfferCounts);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(ReviewOfferCounts other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (FsaCount != other.FsaCount) return false;
              if (ReviewOfferCount != other.ReviewOfferCount) return false;
              if (RejectedTaskCount != other.RejectedTaskCount) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (FsaCount != 0) hash ^= FsaCount.GetHashCode();
              if (ReviewOfferCount != 0) hash ^= ReviewOfferCount.GetHashCode();
              if (RejectedTaskCount != 0) hash ^= RejectedTaskCount.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (FsaCount != 0) {
                output.WriteRawTag(8);
                output.WriteInt32(FsaCount);
              }
              if (ReviewOfferCount != 0) {
                output.WriteRawTag(16);
                output.WriteInt32(ReviewOfferCount);
              }
              if (RejectedTaskCount != 0) {
                output.WriteRawTag(24);
                output.WriteInt32(RejectedTaskCount);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (FsaCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(FsaCount);
              }
              if (ReviewOfferCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(ReviewOfferCount);
              }
              if (RejectedTaskCount != 0) {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(RejectedTaskCount);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(ReviewOfferCounts other) {
              if (other == null) {
                return;
              }
              if (other.FsaCount != 0) {
                FsaCount = other.FsaCount;
              }
              if (other.ReviewOfferCount != 0) {
                ReviewOfferCount = other.ReviewOfferCount;
              }
              if (other.RejectedTaskCount != 0) {
                RejectedTaskCount = other.RejectedTaskCount;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    FsaCount = input.ReadInt32();
                    break;
                  }
                  case 16: {
                    ReviewOfferCount = input.ReadInt32();
                    break;
                  }
                  case 24: {
                    RejectedTaskCount = input.ReadInt32();
                    break;
                  }
                }
              }
            }

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
