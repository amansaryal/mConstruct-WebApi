// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/MConstruct_TaskApi.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grpc.services {

  /// <summary>Holder for reflection information generated from protos/MConstruct_TaskApi.proto</summary>
  public static partial class MConstructTaskApiReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/MConstruct_TaskApi.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MConstructTaskApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9wcm90b3MvTUNvbnN0cnVjdF9UYXNrQXBpLnByb3RvGhNwcm90b3MvQ29t",
            "bW9uLnByb3RvGhVwcm90b3MvVGFza0RhdGEucHJvdG8aFHByb3Rvcy9Gc2FE",
            "YXRhLnByb3RvGhRwcm90b3MvRHNhRGF0YS5wcm90bxoVcHJvdG9zL09URFJE",
            "YXRhLnByb3RvGhdwcm90b3MvUE1UZXN0RGF0YS5wcm90byJRChJBc3NpZ25l",
            "ZEZzYVJlcXVlc3QSEAoIdXNlcm5hbWUYASABKAkSDAoEanBJRBgCIAEoCRIb",
            "CghhY3Rpdml0eRgDIAEoDjIJLkFjdGl2aXR5IigKE0Fzc2lnbmVkRnNhUmVz",
            "cG9uc2USEQoDZnNhGAEgAygLMgQuRlNBIlIKEkFzc2lnbmVkRHNhUmVxdWVz",
            "dBIQCgh1c2VybmFtZRgBIAEoCRINCgVmc2FJRBgCIAEoCRIbCghhY3Rpdml0",
            "eRgDIAEoDjIJLkFjdGl2aXR5IigKE0Fzc2lnbmVkRHNhUmVzcG9uc2USEQoD",
            "ZHNhGAEgAygLMgQuRFNBIlMKE0Fzc2lnbmVkVGFza1JlcXVlc3QSEAoIdXNl",
            "cm5hbWUYASABKAkSDQoFZHNhSUQYAiABKAkSGwoIYWN0aXZpdHkYAyABKA4y",
            "CS5BY3Rpdml0eSIzChRBc3NpZ25lZFRhc2tSZXNwb25zZRIbCgR0YXNrGAEg",
            "AygLMg0uVGFza1NuYXBzaG90IkoKD1Rhc2tEYXRhUmVxdWVzdBIQCgh1c2Vy",
            "bmFtZRgBIAEoCRIOCgZ0YXNrSUQYAiABKAkSFQoFbGF5ZXIYAyABKA4yBi5M",
            "YXllciJEChNTYXZlVGFza0RhdGFSZXF1ZXN0EhAKCHVzZXJuYW1lGAEgASgJ",
            "EhsKCHRhc2tEYXRhGAIgASgLMgkuVGFza0RhdGEiMwoPT1REUkRhdGFSZXF1",
            "ZXN0EhAKCHVzZXJuYW1lGAEgASgJEg4KBnRhc2tJRBgCIAEoCSJEChNTYXZl",
            "T1REUkRhdGFSZXF1ZXN0EhAKCHVzZXJuYW1lGAEgASgJEhsKCG90ZHJEYXRh",
            "GAIgASgLMgkuT1REUkRhdGEiNQoRUE1UZXN0RGF0YVJlcXVlc3QSEAoIdXNl",
            "cm5hbWUYASABKAkSDgoGdGFza0lEGAIgASgJIkoKFVNhdmVQTVRlc3REYXRh",
            "UmVxdWVzdBIQCgh1c2VybmFtZRgBIAEoCRIfCgpwbVRlc3REYXRhGAIgASgL",
            "MgsuUE1UZXN0RGF0YSKWAQoKUkZTUmVxdWVzdBIQCgh1c2VybmFtZRgBIAEo",
            "CRIOCgZ0YXNrSUQYAiABKAkSDQoFZnNhSUQYAyABKAkSKAoJcmZzU3RhdHVz",
            "GAQgASgOMhUuUkZTUmVxdWVzdC5SRlNTdGF0dXMiLQoJUkZTU3RhdHVzEggK",
            "BE5PTkUQABIKCgZOUl9SRlMQARIKCgZDUl9SRlMQAiI2ChJUYXNrSGlzdG9y",
            "eVJlcXVlc3QSEAoIdXNlcm5hbWUYASABKAkSDgoGdGFza0lEGAIgASgJIjwK",
            "GENvbnN0cnVjdGlvbk5vdGVzUmVxdWVzdBIQCgh1c2VybmFtZRgBIAEoCRIO",
            "CgZ0YXNrSUQYAiABKAkigwEKEUNvbnN0cnVjdGlvbk5vdGVzEg4KBnRhc2tJ",
            "RBgBIAEoCRIZChFyb290Q2F1c2VBbmFseXNpcxgCIAEoCRIYChBjb3JyZWN0",
            "aXZlQWN0aW9uGAMgASgJEhgKEHByZXZlbnRpdmVBY3Rpb24YBCABKAkSDwoH",
            "cmVtYXJrcxgFIAEoCSJfChxTYXZlQ29uc3RydWN0aW9uTm90ZXNSZXF1ZXN0",
            "EhAKCHVzZXJuYW1lGAEgASgJEi0KEWNvbnN0cnVjdGlvbk5vdGVzGAIgASgL",
            "MhIuQ29uc3RydWN0aW9uTm90ZXMiUwoaVXBsb2FkUGhvdG9FdmlkZW5jZVJl",
            "cXVlc3QSEAoIdXNlcm5hbWUYASABKAkSDgoGdGFza0lEGAIgASgJEhMKC2Jh",
            "c2U2NEltYWdlGAMgAygJIjgKFFBob3RvRXZpZGVuY2VSZXF1ZXN0EhAKCHVz",
            "ZXJuYW1lGAEgASgJEg4KBnRhc2tJRBgCIAEoCSI8ChVQaG90b0V2aWRlbmNl",
            "UmVzcG9uc2USDgoGdGFza0lEGAEgASgJEhMKC2Jhc2U2NEltYWdlGAIgAygJ",
            "KpwBCghBY3Rpdml0eRIUChBERUZBVUxUX0FDVElWSVRZEAASEgoOVVBEQVRF",
            "X0FTQlVJTFQQARISCg5SRVZJRVdfQVNCVUlMVBACEhAKDENSRUFURV9PRkZF",
            "UhADEhAKDFJFVklFV19PRkZFUhAEEhcKE0JVSUxESU5HX1BFUk1JU1NJT04Q",
            "BRIVChFQUklPUklUWV9CVUlMRElORxAGMssGCgRUYXNrEjwKD0dldEFzc2ln",
            "bmVkRnNhcxITLkFzc2lnbmVkRnNhUmVxdWVzdBoULkFzc2lnbmVkRnNhUmVz",
            "cG9uc2USPAoPR2V0QXNzaWduZWREc2FzEhMuQXNzaWduZWREc2FSZXF1ZXN0",
            "GhQuQXNzaWduZWREc2FSZXNwb25zZRI/ChBHZXRBc3NpZ25lZFRhc2tzEhQu",
            "QXNzaWduZWRUYXNrUmVxdWVzdBoVLkFzc2lnbmVkVGFza1Jlc3BvbnNlEioK",
            "C0dldFRhc2tEYXRhEhAuVGFza0RhdGFSZXF1ZXN0GgkuVGFza0RhdGESLwoM",
            "U2F2ZVRhc2tEYXRhEhQuU2F2ZVRhc2tEYXRhUmVxdWVzdBoJLlJlc3BvbnNl",
            "EioKC0dldE9URFJEYXRhEhAuT1REUkRhdGFSZXF1ZXN0GgkuT1REUkRhdGES",
            "LwoMU2F2ZU9URFJEYXRhEhQuU2F2ZU9URFJEYXRhUmVxdWVzdBoJLlJlc3Bv",
            "bnNlEjAKDUdldFBNVGVzdERhdGESEi5QTVRlc3REYXRhUmVxdWVzdBoLLlBN",
            "VGVzdERhdGESMwoOU2F2ZVBNVGVzdERhdGESFi5TYXZlUE1UZXN0RGF0YVJl",
            "cXVlc3QaCS5SZXNwb25zZRIkCgpEZWNsYXJlUkZTEgsuUkZTUmVxdWVzdBoJ",
            "LlJlc3BvbnNlEjMKDkdldFRhc2tIaXN0b3J5EhMuVGFza0hpc3RvcnlSZXF1",
            "ZXN0GgwuVGFza0hpc3RvcnkSRQoUR2V0Q29uc3RydWN0aW9uTm90ZXMSGS5D",
            "b25zdHJ1Y3Rpb25Ob3Rlc1JlcXVlc3QaEi5Db25zdHJ1Y3Rpb25Ob3RlcxJB",
            "ChVTYXZlQ29uc3RydWN0aW9uTm90ZXMSHS5TYXZlQ29uc3RydWN0aW9uTm90",
            "ZXNSZXF1ZXN0GgkuUmVzcG9uc2USPQoTVXBsb2FkUGhvdG9FdmlkZW5jZRIb",
            "LlVwbG9hZFBob3RvRXZpZGVuY2VSZXF1ZXN0GgkuUmVzcG9uc2USQQoQR2V0",
            "UGhvdG9FdmlkZW5jZRIVLlBob3RvRXZpZGVuY2VSZXF1ZXN0GhYuUGhvdG9F",
            "dmlkZW5jZVJlc3BvbnNlQikKF2NvbS5tQ29uc3RydWN0LnByb3RvYnVmqgIN",
            "R3JwYy5zZXJ2aWNlc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Grpc.common.CommonReflection.Descriptor, global::Grpc.services.TaskDataReflection.Descriptor, global::Grpc.services.FsaDataReflection.Descriptor, global::Grpc.services.DsaDataReflection.Descriptor, global::Grpc.services.OTDRDataReflection.Descriptor, global::Grpc.services.PMTestDataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Grpc.services.Activity), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.AssignedFsaRequest), global::Grpc.services.AssignedFsaRequest.Parser, new[]{ "Username", "JpID", "Activity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.AssignedFsaResponse), global::Grpc.services.AssignedFsaResponse.Parser, new[]{ "Fsa" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.AssignedDsaRequest), global::Grpc.services.AssignedDsaRequest.Parser, new[]{ "Username", "FsaID", "Activity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.AssignedDsaResponse), global::Grpc.services.AssignedDsaResponse.Parser, new[]{ "Dsa" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.AssignedTaskRequest), global::Grpc.services.AssignedTaskRequest.Parser, new[]{ "Username", "DsaID", "Activity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.AssignedTaskResponse), global::Grpc.services.AssignedTaskResponse.Parser, new[]{ "Task" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.TaskDataRequest), global::Grpc.services.TaskDataRequest.Parser, new[]{ "Username", "TaskID", "Layer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.SaveTaskDataRequest), global::Grpc.services.SaveTaskDataRequest.Parser, new[]{ "Username", "TaskData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.OTDRDataRequest), global::Grpc.services.OTDRDataRequest.Parser, new[]{ "Username", "TaskID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.SaveOTDRDataRequest), global::Grpc.services.SaveOTDRDataRequest.Parser, new[]{ "Username", "OtdrData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.PMTestDataRequest), global::Grpc.services.PMTestDataRequest.Parser, new[]{ "Username", "TaskID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.SavePMTestDataRequest), global::Grpc.services.SavePMTestDataRequest.Parser, new[]{ "Username", "PmTestData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.RFSRequest), global::Grpc.services.RFSRequest.Parser, new[]{ "Username", "TaskID", "FsaID", "RfsStatus" }, null, new[]{ typeof(global::Grpc.services.RFSRequest.Types.RFSStatus) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.TaskHistoryRequest), global::Grpc.services.TaskHistoryRequest.Parser, new[]{ "Username", "TaskID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.ConstructionNotesRequest), global::Grpc.services.ConstructionNotesRequest.Parser, new[]{ "Username", "TaskID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.ConstructionNotes), global::Grpc.services.ConstructionNotes.Parser, new[]{ "TaskID", "RootCauseAnalysis", "CorrectiveAction", "PreventiveAction", "Remarks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.SaveConstructionNotesRequest), global::Grpc.services.SaveConstructionNotesRequest.Parser, new[]{ "Username", "ConstructionNotes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.UploadPhotoEvidenceRequest), global::Grpc.services.UploadPhotoEvidenceRequest.Parser, new[]{ "Username", "TaskID", "Base64Image" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.PhotoEvidenceRequest), global::Grpc.services.PhotoEvidenceRequest.Parser, new[]{ "Username", "TaskID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.PhotoEvidenceResponse), global::Grpc.services.PhotoEvidenceResponse.Parser, new[]{ "TaskID", "Base64Image" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Activity {
    [pbr::OriginalName("DEFAULT_ACTIVITY")] DefaultActivity = 0,
    [pbr::OriginalName("UPDATE_ASBUILT")] UpdateAsbuilt = 1,
    [pbr::OriginalName("REVIEW_ASBUILT")] ReviewAsbuilt = 2,
    [pbr::OriginalName("CREATE_OFFER")] CreateOffer = 3,
    [pbr::OriginalName("REVIEW_OFFER")] ReviewOffer = 4,
    [pbr::OriginalName("BUILDING_PERMISSION")] BuildingPermission = 5,
    [pbr::OriginalName("PRIORITY_BUILDING")] PriorityBuilding = 6,
  }

  #endregion

  #region Messages
  public sealed partial class AssignedFsaRequest : pb::IMessage<AssignedFsaRequest> {
    private static readonly pb::MessageParser<AssignedFsaRequest> _parser = new pb::MessageParser<AssignedFsaRequest>(() => new AssignedFsaRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssignedFsaRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedFsaRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedFsaRequest(AssignedFsaRequest other) : this() {
      username_ = other.username_;
      jpID_ = other.jpID_;
      activity_ = other.activity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedFsaRequest Clone() {
      return new AssignedFsaRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jpID" field.</summary>
    public const int JpIDFieldNumber = 2;
    private string jpID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JpID {
      get { return jpID_; }
      set {
        jpID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activity" field.</summary>
    public const int ActivityFieldNumber = 3;
    private global::Grpc.services.Activity activity_ = global::Grpc.services.Activity.DefaultActivity;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.Activity Activity {
      get { return activity_; }
      set {
        activity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssignedFsaRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssignedFsaRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (JpID != other.JpID) return false;
      if (Activity != other.Activity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (JpID.Length != 0) hash ^= JpID.GetHashCode();
      if (Activity != global::Grpc.services.Activity.DefaultActivity) hash ^= Activity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (JpID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(JpID);
      }
      if (Activity != global::Grpc.services.Activity.DefaultActivity) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Activity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (JpID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JpID);
      }
      if (Activity != global::Grpc.services.Activity.DefaultActivity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Activity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssignedFsaRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.JpID.Length != 0) {
        JpID = other.JpID;
      }
      if (other.Activity != global::Grpc.services.Activity.DefaultActivity) {
        Activity = other.Activity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            JpID = input.ReadString();
            break;
          }
          case 24: {
            Activity = (global::Grpc.services.Activity) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssignedFsaResponse : pb::IMessage<AssignedFsaResponse> {
    private static readonly pb::MessageParser<AssignedFsaResponse> _parser = new pb::MessageParser<AssignedFsaResponse>(() => new AssignedFsaResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssignedFsaResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedFsaResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedFsaResponse(AssignedFsaResponse other) : this() {
      fsa_ = other.fsa_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedFsaResponse Clone() {
      return new AssignedFsaResponse(this);
    }

    /// <summary>Field number for the "fsa" field.</summary>
    public const int FsaFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Grpc.services.FSA> _repeated_fsa_codec
        = pb::FieldCodec.ForMessage(10, global::Grpc.services.FSA.Parser);
    private readonly pbc::RepeatedField<global::Grpc.services.FSA> fsa_ = new pbc::RepeatedField<global::Grpc.services.FSA>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpc.services.FSA> Fsa {
      get { return fsa_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssignedFsaResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssignedFsaResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fsa_.Equals(other.fsa_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fsa_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      fsa_.WriteTo(output, _repeated_fsa_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fsa_.CalculateSize(_repeated_fsa_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssignedFsaResponse other) {
      if (other == null) {
        return;
      }
      fsa_.Add(other.fsa_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fsa_.AddEntriesFrom(input, _repeated_fsa_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssignedDsaRequest : pb::IMessage<AssignedDsaRequest> {
    private static readonly pb::MessageParser<AssignedDsaRequest> _parser = new pb::MessageParser<AssignedDsaRequest>(() => new AssignedDsaRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssignedDsaRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedDsaRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedDsaRequest(AssignedDsaRequest other) : this() {
      username_ = other.username_;
      fsaID_ = other.fsaID_;
      activity_ = other.activity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedDsaRequest Clone() {
      return new AssignedDsaRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fsaID" field.</summary>
    public const int FsaIDFieldNumber = 2;
    private string fsaID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FsaID {
      get { return fsaID_; }
      set {
        fsaID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activity" field.</summary>
    public const int ActivityFieldNumber = 3;
    private global::Grpc.services.Activity activity_ = global::Grpc.services.Activity.DefaultActivity;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.Activity Activity {
      get { return activity_; }
      set {
        activity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssignedDsaRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssignedDsaRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (FsaID != other.FsaID) return false;
      if (Activity != other.Activity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (FsaID.Length != 0) hash ^= FsaID.GetHashCode();
      if (Activity != global::Grpc.services.Activity.DefaultActivity) hash ^= Activity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (FsaID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FsaID);
      }
      if (Activity != global::Grpc.services.Activity.DefaultActivity) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Activity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (FsaID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FsaID);
      }
      if (Activity != global::Grpc.services.Activity.DefaultActivity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Activity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssignedDsaRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.FsaID.Length != 0) {
        FsaID = other.FsaID;
      }
      if (other.Activity != global::Grpc.services.Activity.DefaultActivity) {
        Activity = other.Activity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            FsaID = input.ReadString();
            break;
          }
          case 24: {
            Activity = (global::Grpc.services.Activity) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssignedDsaResponse : pb::IMessage<AssignedDsaResponse> {
    private static readonly pb::MessageParser<AssignedDsaResponse> _parser = new pb::MessageParser<AssignedDsaResponse>(() => new AssignedDsaResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssignedDsaResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedDsaResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedDsaResponse(AssignedDsaResponse other) : this() {
      dsa_ = other.dsa_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedDsaResponse Clone() {
      return new AssignedDsaResponse(this);
    }

    /// <summary>Field number for the "dsa" field.</summary>
    public const int DsaFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Grpc.services.DSA> _repeated_dsa_codec
        = pb::FieldCodec.ForMessage(10, global::Grpc.services.DSA.Parser);
    private readonly pbc::RepeatedField<global::Grpc.services.DSA> dsa_ = new pbc::RepeatedField<global::Grpc.services.DSA>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpc.services.DSA> Dsa {
      get { return dsa_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssignedDsaResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssignedDsaResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dsa_.Equals(other.dsa_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dsa_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      dsa_.WriteTo(output, _repeated_dsa_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dsa_.CalculateSize(_repeated_dsa_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssignedDsaResponse other) {
      if (other == null) {
        return;
      }
      dsa_.Add(other.dsa_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dsa_.AddEntriesFrom(input, _repeated_dsa_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssignedTaskRequest : pb::IMessage<AssignedTaskRequest> {
    private static readonly pb::MessageParser<AssignedTaskRequest> _parser = new pb::MessageParser<AssignedTaskRequest>(() => new AssignedTaskRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssignedTaskRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedTaskRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedTaskRequest(AssignedTaskRequest other) : this() {
      username_ = other.username_;
      dsaID_ = other.dsaID_;
      activity_ = other.activity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedTaskRequest Clone() {
      return new AssignedTaskRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dsaID" field.</summary>
    public const int DsaIDFieldNumber = 2;
    private string dsaID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DsaID {
      get { return dsaID_; }
      set {
        dsaID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "activity" field.</summary>
    public const int ActivityFieldNumber = 3;
    private global::Grpc.services.Activity activity_ = global::Grpc.services.Activity.DefaultActivity;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.Activity Activity {
      get { return activity_; }
      set {
        activity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssignedTaskRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssignedTaskRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (DsaID != other.DsaID) return false;
      if (Activity != other.Activity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (DsaID.Length != 0) hash ^= DsaID.GetHashCode();
      if (Activity != global::Grpc.services.Activity.DefaultActivity) hash ^= Activity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (DsaID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DsaID);
      }
      if (Activity != global::Grpc.services.Activity.DefaultActivity) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Activity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (DsaID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DsaID);
      }
      if (Activity != global::Grpc.services.Activity.DefaultActivity) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Activity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssignedTaskRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.DsaID.Length != 0) {
        DsaID = other.DsaID;
      }
      if (other.Activity != global::Grpc.services.Activity.DefaultActivity) {
        Activity = other.Activity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            DsaID = input.ReadString();
            break;
          }
          case 24: {
            Activity = (global::Grpc.services.Activity) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssignedTaskResponse : pb::IMessage<AssignedTaskResponse> {
    private static readonly pb::MessageParser<AssignedTaskResponse> _parser = new pb::MessageParser<AssignedTaskResponse>(() => new AssignedTaskResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssignedTaskResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedTaskResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedTaskResponse(AssignedTaskResponse other) : this() {
      task_ = other.task_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignedTaskResponse Clone() {
      return new AssignedTaskResponse(this);
    }

    /// <summary>Field number for the "task" field.</summary>
    public const int TaskFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Grpc.services.TaskSnapshot> _repeated_task_codec
        = pb::FieldCodec.ForMessage(10, global::Grpc.services.TaskSnapshot.Parser);
    private readonly pbc::RepeatedField<global::Grpc.services.TaskSnapshot> task_ = new pbc::RepeatedField<global::Grpc.services.TaskSnapshot>();
    /// <summary>
    ///    EquipmentTasks equipmentTasks = 1;
    ///    SpanTasks spanTasks = 2;
    ///    StructureTasks structureTasks = 3;
    ///    TransmediaTasks transmediaTasks = 4;
    ///    TransmediaMDUTasks transmediaMduTasks = 5;
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpc.services.TaskSnapshot> Task {
      get { return task_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssignedTaskResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssignedTaskResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!task_.Equals(other.task_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= task_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      task_.WriteTo(output, _repeated_task_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += task_.CalculateSize(_repeated_task_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssignedTaskResponse other) {
      if (other == null) {
        return;
      }
      task_.Add(other.task_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            task_.AddEntriesFrom(input, _repeated_task_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TaskDataRequest : pb::IMessage<TaskDataRequest> {
    private static readonly pb::MessageParser<TaskDataRequest> _parser = new pb::MessageParser<TaskDataRequest>(() => new TaskDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskDataRequest(TaskDataRequest other) : this() {
      username_ = other.username_;
      taskID_ = other.taskID_;
      layer_ = other.layer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskDataRequest Clone() {
      return new TaskDataRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskID" field.</summary>
    public const int TaskIDFieldNumber = 2;
    private string taskID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "layer" field.</summary>
    public const int LayerFieldNumber = 3;
    private global::Grpc.common.Layer layer_ = global::Grpc.common.Layer.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.common.Layer Layer {
      get { return layer_; }
      set {
        layer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (TaskID != other.TaskID) return false;
      if (Layer != other.Layer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      if (Layer != global::Grpc.common.Layer.None) hash ^= Layer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (TaskID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskID);
      }
      if (Layer != global::Grpc.common.Layer.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Layer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      if (Layer != global::Grpc.common.Layer.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Layer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      if (other.Layer != global::Grpc.common.Layer.None) {
        Layer = other.Layer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            TaskID = input.ReadString();
            break;
          }
          case 24: {
            Layer = (global::Grpc.common.Layer) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SaveTaskDataRequest : pb::IMessage<SaveTaskDataRequest> {
    private static readonly pb::MessageParser<SaveTaskDataRequest> _parser = new pb::MessageParser<SaveTaskDataRequest>(() => new SaveTaskDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveTaskDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveTaskDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveTaskDataRequest(SaveTaskDataRequest other) : this() {
      username_ = other.username_;
      taskData_ = other.taskData_ != null ? other.taskData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveTaskDataRequest Clone() {
      return new SaveTaskDataRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskData" field.</summary>
    public const int TaskDataFieldNumber = 2;
    private global::Grpc.services.TaskData taskData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.TaskData TaskData {
      get { return taskData_; }
      set {
        taskData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveTaskDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveTaskDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (!object.Equals(TaskData, other.TaskData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (taskData_ != null) hash ^= TaskData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (taskData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TaskData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (taskData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TaskData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveTaskDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.taskData_ != null) {
        if (taskData_ == null) {
          TaskData = new global::Grpc.services.TaskData();
        }
        TaskData.MergeFrom(other.TaskData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            if (taskData_ == null) {
              TaskData = new global::Grpc.services.TaskData();
            }
            input.ReadMessage(TaskData);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OTDRDataRequest : pb::IMessage<OTDRDataRequest> {
    private static readonly pb::MessageParser<OTDRDataRequest> _parser = new pb::MessageParser<OTDRDataRequest>(() => new OTDRDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OTDRDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTDRDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTDRDataRequest(OTDRDataRequest other) : this() {
      username_ = other.username_;
      taskID_ = other.taskID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OTDRDataRequest Clone() {
      return new OTDRDataRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskID" field.</summary>
    public const int TaskIDFieldNumber = 2;
    private string taskID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OTDRDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OTDRDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (TaskID != other.TaskID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (TaskID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OTDRDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            TaskID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SaveOTDRDataRequest : pb::IMessage<SaveOTDRDataRequest> {
    private static readonly pb::MessageParser<SaveOTDRDataRequest> _parser = new pb::MessageParser<SaveOTDRDataRequest>(() => new SaveOTDRDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveOTDRDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveOTDRDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveOTDRDataRequest(SaveOTDRDataRequest other) : this() {
      username_ = other.username_;
      otdrData_ = other.otdrData_ != null ? other.otdrData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveOTDRDataRequest Clone() {
      return new SaveOTDRDataRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "otdrData" field.</summary>
    public const int OtdrDataFieldNumber = 2;
    private global::Grpc.services.OTDRData otdrData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.OTDRData OtdrData {
      get { return otdrData_; }
      set {
        otdrData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveOTDRDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveOTDRDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (!object.Equals(OtdrData, other.OtdrData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (otdrData_ != null) hash ^= OtdrData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (otdrData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OtdrData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (otdrData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OtdrData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveOTDRDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.otdrData_ != null) {
        if (otdrData_ == null) {
          OtdrData = new global::Grpc.services.OTDRData();
        }
        OtdrData.MergeFrom(other.OtdrData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            if (otdrData_ == null) {
              OtdrData = new global::Grpc.services.OTDRData();
            }
            input.ReadMessage(OtdrData);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PMTestDataRequest : pb::IMessage<PMTestDataRequest> {
    private static readonly pb::MessageParser<PMTestDataRequest> _parser = new pb::MessageParser<PMTestDataRequest>(() => new PMTestDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PMTestDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMTestDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMTestDataRequest(PMTestDataRequest other) : this() {
      username_ = other.username_;
      taskID_ = other.taskID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PMTestDataRequest Clone() {
      return new PMTestDataRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskID" field.</summary>
    public const int TaskIDFieldNumber = 2;
    private string taskID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PMTestDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PMTestDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (TaskID != other.TaskID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (TaskID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PMTestDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            TaskID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SavePMTestDataRequest : pb::IMessage<SavePMTestDataRequest> {
    private static readonly pb::MessageParser<SavePMTestDataRequest> _parser = new pb::MessageParser<SavePMTestDataRequest>(() => new SavePMTestDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SavePMTestDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavePMTestDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavePMTestDataRequest(SavePMTestDataRequest other) : this() {
      username_ = other.username_;
      pmTestData_ = other.pmTestData_ != null ? other.pmTestData_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SavePMTestDataRequest Clone() {
      return new SavePMTestDataRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pmTestData" field.</summary>
    public const int PmTestDataFieldNumber = 2;
    private global::Grpc.services.PMTestData pmTestData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.PMTestData PmTestData {
      get { return pmTestData_; }
      set {
        pmTestData_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SavePMTestDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SavePMTestDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (!object.Equals(PmTestData, other.PmTestData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (pmTestData_ != null) hash ^= PmTestData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (pmTestData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PmTestData);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (pmTestData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PmTestData);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SavePMTestDataRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.pmTestData_ != null) {
        if (pmTestData_ == null) {
          PmTestData = new global::Grpc.services.PMTestData();
        }
        PmTestData.MergeFrom(other.PmTestData);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            if (pmTestData_ == null) {
              PmTestData = new global::Grpc.services.PMTestData();
            }
            input.ReadMessage(PmTestData);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RFSRequest : pb::IMessage<RFSRequest> {
    private static readonly pb::MessageParser<RFSRequest> _parser = new pb::MessageParser<RFSRequest>(() => new RFSRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RFSRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RFSRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RFSRequest(RFSRequest other) : this() {
      username_ = other.username_;
      taskID_ = other.taskID_;
      fsaID_ = other.fsaID_;
      rfsStatus_ = other.rfsStatus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RFSRequest Clone() {
      return new RFSRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskID" field.</summary>
    public const int TaskIDFieldNumber = 2;
    private string taskID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fsaID" field.</summary>
    public const int FsaIDFieldNumber = 3;
    private string fsaID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FsaID {
      get { return fsaID_; }
      set {
        fsaID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rfsStatus" field.</summary>
    public const int RfsStatusFieldNumber = 4;
    private global::Grpc.services.RFSRequest.Types.RFSStatus rfsStatus_ = global::Grpc.services.RFSRequest.Types.RFSStatus.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.RFSRequest.Types.RFSStatus RfsStatus {
      get { return rfsStatus_; }
      set {
        rfsStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RFSRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RFSRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (TaskID != other.TaskID) return false;
      if (FsaID != other.FsaID) return false;
      if (RfsStatus != other.RfsStatus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      if (FsaID.Length != 0) hash ^= FsaID.GetHashCode();
      if (RfsStatus != global::Grpc.services.RFSRequest.Types.RFSStatus.None) hash ^= RfsStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (TaskID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskID);
      }
      if (FsaID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FsaID);
      }
      if (RfsStatus != global::Grpc.services.RFSRequest.Types.RFSStatus.None) {
        output.WriteRawTag(32);
        output.WriteEnum((int) RfsStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      if (FsaID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FsaID);
      }
      if (RfsStatus != global::Grpc.services.RFSRequest.Types.RFSStatus.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RfsStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RFSRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      if (other.FsaID.Length != 0) {
        FsaID = other.FsaID;
      }
      if (other.RfsStatus != global::Grpc.services.RFSRequest.Types.RFSStatus.None) {
        RfsStatus = other.RfsStatus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            TaskID = input.ReadString();
            break;
          }
          case 26: {
            FsaID = input.ReadString();
            break;
          }
          case 32: {
            RfsStatus = (global::Grpc.services.RFSRequest.Types.RFSStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RFSRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum RFSStatus {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("NR_RFS")] NrRfs = 1,
        [pbr::OriginalName("CR_RFS")] CrRfs = 2,
      }

    }
    #endregion

  }

  public sealed partial class TaskHistoryRequest : pb::IMessage<TaskHistoryRequest> {
    private static readonly pb::MessageParser<TaskHistoryRequest> _parser = new pb::MessageParser<TaskHistoryRequest>(() => new TaskHistoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskHistoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskHistoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskHistoryRequest(TaskHistoryRequest other) : this() {
      username_ = other.username_;
      taskID_ = other.taskID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskHistoryRequest Clone() {
      return new TaskHistoryRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskID" field.</summary>
    public const int TaskIDFieldNumber = 2;
    private string taskID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskHistoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskHistoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (TaskID != other.TaskID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (TaskID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskHistoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            TaskID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConstructionNotesRequest : pb::IMessage<ConstructionNotesRequest> {
    private static readonly pb::MessageParser<ConstructionNotesRequest> _parser = new pb::MessageParser<ConstructionNotesRequest>(() => new ConstructionNotesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConstructionNotesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConstructionNotesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConstructionNotesRequest(ConstructionNotesRequest other) : this() {
      username_ = other.username_;
      taskID_ = other.taskID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConstructionNotesRequest Clone() {
      return new ConstructionNotesRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskID" field.</summary>
    public const int TaskIDFieldNumber = 2;
    private string taskID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConstructionNotesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConstructionNotesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (TaskID != other.TaskID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (TaskID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConstructionNotesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            TaskID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConstructionNotes : pb::IMessage<ConstructionNotes> {
    private static readonly pb::MessageParser<ConstructionNotes> _parser = new pb::MessageParser<ConstructionNotes>(() => new ConstructionNotes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConstructionNotes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConstructionNotes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConstructionNotes(ConstructionNotes other) : this() {
      taskID_ = other.taskID_;
      rootCauseAnalysis_ = other.rootCauseAnalysis_;
      correctiveAction_ = other.correctiveAction_;
      preventiveAction_ = other.preventiveAction_;
      remarks_ = other.remarks_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConstructionNotes Clone() {
      return new ConstructionNotes(this);
    }

    /// <summary>Field number for the "taskID" field.</summary>
    public const int TaskIDFieldNumber = 1;
    private string taskID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rootCauseAnalysis" field.</summary>
    public const int RootCauseAnalysisFieldNumber = 2;
    private string rootCauseAnalysis_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RootCauseAnalysis {
      get { return rootCauseAnalysis_; }
      set {
        rootCauseAnalysis_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "correctiveAction" field.</summary>
    public const int CorrectiveActionFieldNumber = 3;
    private string correctiveAction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CorrectiveAction {
      get { return correctiveAction_; }
      set {
        correctiveAction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "preventiveAction" field.</summary>
    public const int PreventiveActionFieldNumber = 4;
    private string preventiveAction_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PreventiveAction {
      get { return preventiveAction_; }
      set {
        preventiveAction_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "remarks" field.</summary>
    public const int RemarksFieldNumber = 5;
    private string remarks_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Remarks {
      get { return remarks_; }
      set {
        remarks_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConstructionNotes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConstructionNotes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskID != other.TaskID) return false;
      if (RootCauseAnalysis != other.RootCauseAnalysis) return false;
      if (CorrectiveAction != other.CorrectiveAction) return false;
      if (PreventiveAction != other.PreventiveAction) return false;
      if (Remarks != other.Remarks) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      if (RootCauseAnalysis.Length != 0) hash ^= RootCauseAnalysis.GetHashCode();
      if (CorrectiveAction.Length != 0) hash ^= CorrectiveAction.GetHashCode();
      if (PreventiveAction.Length != 0) hash ^= PreventiveAction.GetHashCode();
      if (Remarks.Length != 0) hash ^= Remarks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskID);
      }
      if (RootCauseAnalysis.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RootCauseAnalysis);
      }
      if (CorrectiveAction.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CorrectiveAction);
      }
      if (PreventiveAction.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PreventiveAction);
      }
      if (Remarks.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Remarks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      if (RootCauseAnalysis.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RootCauseAnalysis);
      }
      if (CorrectiveAction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CorrectiveAction);
      }
      if (PreventiveAction.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PreventiveAction);
      }
      if (Remarks.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Remarks);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConstructionNotes other) {
      if (other == null) {
        return;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      if (other.RootCauseAnalysis.Length != 0) {
        RootCauseAnalysis = other.RootCauseAnalysis;
      }
      if (other.CorrectiveAction.Length != 0) {
        CorrectiveAction = other.CorrectiveAction;
      }
      if (other.PreventiveAction.Length != 0) {
        PreventiveAction = other.PreventiveAction;
      }
      if (other.Remarks.Length != 0) {
        Remarks = other.Remarks;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskID = input.ReadString();
            break;
          }
          case 18: {
            RootCauseAnalysis = input.ReadString();
            break;
          }
          case 26: {
            CorrectiveAction = input.ReadString();
            break;
          }
          case 34: {
            PreventiveAction = input.ReadString();
            break;
          }
          case 42: {
            Remarks = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SaveConstructionNotesRequest : pb::IMessage<SaveConstructionNotesRequest> {
    private static readonly pb::MessageParser<SaveConstructionNotesRequest> _parser = new pb::MessageParser<SaveConstructionNotesRequest>(() => new SaveConstructionNotesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveConstructionNotesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveConstructionNotesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveConstructionNotesRequest(SaveConstructionNotesRequest other) : this() {
      username_ = other.username_;
      constructionNotes_ = other.constructionNotes_ != null ? other.constructionNotes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveConstructionNotesRequest Clone() {
      return new SaveConstructionNotesRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "constructionNotes" field.</summary>
    public const int ConstructionNotesFieldNumber = 2;
    private global::Grpc.services.ConstructionNotes constructionNotes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.ConstructionNotes ConstructionNotes {
      get { return constructionNotes_; }
      set {
        constructionNotes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveConstructionNotesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveConstructionNotesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (!object.Equals(ConstructionNotes, other.ConstructionNotes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (constructionNotes_ != null) hash ^= ConstructionNotes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (constructionNotes_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConstructionNotes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (constructionNotes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConstructionNotes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveConstructionNotesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.constructionNotes_ != null) {
        if (constructionNotes_ == null) {
          ConstructionNotes = new global::Grpc.services.ConstructionNotes();
        }
        ConstructionNotes.MergeFrom(other.ConstructionNotes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            if (constructionNotes_ == null) {
              ConstructionNotes = new global::Grpc.services.ConstructionNotes();
            }
            input.ReadMessage(ConstructionNotes);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UploadPhotoEvidenceRequest : pb::IMessage<UploadPhotoEvidenceRequest> {
    private static readonly pb::MessageParser<UploadPhotoEvidenceRequest> _parser = new pb::MessageParser<UploadPhotoEvidenceRequest>(() => new UploadPhotoEvidenceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UploadPhotoEvidenceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPhotoEvidenceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPhotoEvidenceRequest(UploadPhotoEvidenceRequest other) : this() {
      username_ = other.username_;
      taskID_ = other.taskID_;
      base64Image_ = other.base64Image_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UploadPhotoEvidenceRequest Clone() {
      return new UploadPhotoEvidenceRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskID" field.</summary>
    public const int TaskIDFieldNumber = 2;
    private string taskID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "base64Image" field.</summary>
    public const int Base64ImageFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_base64Image_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> base64Image_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Base64Image {
      get { return base64Image_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UploadPhotoEvidenceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UploadPhotoEvidenceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (TaskID != other.TaskID) return false;
      if(!base64Image_.Equals(other.base64Image_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      hash ^= base64Image_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (TaskID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskID);
      }
      base64Image_.WriteTo(output, _repeated_base64Image_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      size += base64Image_.CalculateSize(_repeated_base64Image_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UploadPhotoEvidenceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      base64Image_.Add(other.base64Image_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            TaskID = input.ReadString();
            break;
          }
          case 26: {
            base64Image_.AddEntriesFrom(input, _repeated_base64Image_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PhotoEvidenceRequest : pb::IMessage<PhotoEvidenceRequest> {
    private static readonly pb::MessageParser<PhotoEvidenceRequest> _parser = new pb::MessageParser<PhotoEvidenceRequest>(() => new PhotoEvidenceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PhotoEvidenceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoEvidenceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoEvidenceRequest(PhotoEvidenceRequest other) : this() {
      username_ = other.username_;
      taskID_ = other.taskID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoEvidenceRequest Clone() {
      return new PhotoEvidenceRequest(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskID" field.</summary>
    public const int TaskIDFieldNumber = 2;
    private string taskID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PhotoEvidenceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PhotoEvidenceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (TaskID != other.TaskID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (TaskID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PhotoEvidenceRequest other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            TaskID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PhotoEvidenceResponse : pb::IMessage<PhotoEvidenceResponse> {
    private static readonly pb::MessageParser<PhotoEvidenceResponse> _parser = new pb::MessageParser<PhotoEvidenceResponse>(() => new PhotoEvidenceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PhotoEvidenceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.MConstructTaskApiReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoEvidenceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoEvidenceResponse(PhotoEvidenceResponse other) : this() {
      taskID_ = other.taskID_;
      base64Image_ = other.base64Image_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PhotoEvidenceResponse Clone() {
      return new PhotoEvidenceResponse(this);
    }

    /// <summary>Field number for the "taskID" field.</summary>
    public const int TaskIDFieldNumber = 1;
    private string taskID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "base64Image" field.</summary>
    public const int Base64ImageFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_base64Image_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> base64Image_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Base64Image {
      get { return base64Image_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PhotoEvidenceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PhotoEvidenceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TaskID != other.TaskID) return false;
      if(!base64Image_.Equals(other.base64Image_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      hash ^= base64Image_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TaskID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TaskID);
      }
      base64Image_.WriteTo(output, _repeated_base64Image_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      size += base64Image_.CalculateSize(_repeated_base64Image_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PhotoEvidenceResponse other) {
      if (other == null) {
        return;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      base64Image_.Add(other.base64Image_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TaskID = input.ReadString();
            break;
          }
          case 18: {
            base64Image_.AddEntriesFrom(input, _repeated_base64Image_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
