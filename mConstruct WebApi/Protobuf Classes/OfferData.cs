// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protos/mConstruct/data/OfferData.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Grpc.services {

  /// <summary>Holder for reflection information generated from protos/mConstruct/data/OfferData.proto</summary>
  public static partial class OfferDataReflection {

    #region Descriptor
    /// <summary>File descriptor for protos/mConstruct/data/OfferData.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OfferDataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZwcm90b3MvbUNvbnN0cnVjdC9kYXRhL09mZmVyRGF0YS5wcm90bxoTcHJv",
            "dG9zL0NvbW1vbi5wcm90bxolcHJvdG9zL21Db25zdHJ1Y3QvZGF0YS9UYXNr",
            "RGF0YS5wcm90bxojcHJvdG9zL21Db25zdHJ1Y3QvZGF0YS9RQ0RhdGEucHJv",
            "dG8igQMKDVBvc3NpYmxlT2ZmZXISJQoNb2ZmZXJDYXRlZ29yeRgBIAEoDjIO",
            "Lk9mZmVyQ2F0ZWdvcnkSDgoGdGFza0lkGAIgASgJEhAKCHRhc2tORUlEGAMg",
            "ASgJEg8KB2RzYU5hbWUYBCABKAkSDQoFZHNhSUQYBSABKAkSDwoHZnNhTmFt",
            "ZRgGIAEoCRINCgVmc2FJRBgHIAEoCRIOCgZqcE5hbWUYCCABKAkSDAoEanBJ",
            "RBgJIAEoCRIXCg90b3RhbFRhc2tzQ291bnQYCiABKAUSGwoTY29tcGxldGVk",
            "VGFza3NDb3VudBgLIAEoBRIZChFwZW5kaW5nVGFza3NDb3VudBgMIAEoBRIq",
            "CgxzcGxpdHRlclRhZ3MYDSABKAsyEi5TcGxpdHRlck9mZmVyVGFnc0gAEiUK",
            "DGZlZWRlck51bWJlchgOIAEoDjINLkZlZWRlck51bWJlckgAEhcKBnN0YXR1",
            "cxgPIAEoDjIHLlN0YXR1c0IMCgppZGVudGlmaWVyIl0KEVNwbGl0dGVyT2Zm",
            "ZXJUYWdzEiMKDHNwbGl0dGVyVHlwZRgBIAEoDjINLlNwbGl0dGVyVHlwZRIj",
            "CgxzcGxpdHRlclBvcnQYAiABKA4yDS5TcGxpdHRlclBvcnQijQIKCU9mZmVy",
            "RGF0YRIRCglvZmZlckNvZGUYASABKAkSDwoHZnNhTmFtZRgCIAEoCRINCgVm",
            "c2FJRBgDIAEoCRIOCgZqcE5hbWUYBCABKAkSDAoEanBJRBgFIAEoCRIXCg90",
            "b3RhbFRhc2tzQ291bnQYBiABKAUSJQoNb2ZmZXJDYXRlZ29yeRgHIAEoDjIO",
            "Lk9mZmVyQ2F0ZWdvcnkSKgoMc3BsaXR0ZXJUYWdzGAkgASgLMhIuU3BsaXR0",
            "ZXJPZmZlclRhZ3NIABIlCgxmZWVkZXJOdW1iZXIYCiABKA4yDS5GZWVkZXJO",
            "dW1iZXJIABIOCgZ0YXNrSUQYCyABKAlCDAoKaWRlbnRpZmllciLBAQoMT2Zm",
            "ZXJTdW1tYXJ5EhEKCW9mZmVyQ29kZRgBIAEoCRInChBlcXVpcG1lbnRTdW1t",
            "YXJ5GAIgASgLMg0uTGF5ZXJTdW1tYXJ5EigKEXRyYW5zbWVkaWFTdW1tYXJ5",
            "GAMgASgLMg0uTGF5ZXJTdW1tYXJ5EicKEHN0cnVjdHVyZVN1bW1hcnkYBCAB",
            "KAsyDS5MYXllclN1bW1hcnkSIgoLc3BhblN1bW1hcnkYBSABKAsyDS5MYXll",
            "clN1bW1hcnkiugEKDExheWVyU3VtbWFyeRIVCgVsYXllchgBIAEoDjIGLkxh",
            "eWVyEhgKEHRvdGFsRGVzaWduVmFsdWUYAiABKAESGAoQdG90YWxBY3R1YWxW",
            "YWx1ZRgDIAEoARILCgN1b20YBCABKAkSGwoEdGFzaxgFIAMoCzINLlRhc2tT",
            "bmFwc2hvdBI1ChJxdWFsaXR5Q2hlY2twb2ludHMYBiABKAsyGS5RdWFsaXR5",
            "Q2hlY2twb2ludFNuaXBwZXQiNgoLVGFza1dyYXBwZXISFQoFbGF5ZXIYASAB",
            "KA4yBi5MYXllchIQCgh0YXNrTkVJRBgCIAMoCSJVCg5HZW9EYXRhV3JhcHBl",
            "chIVCgVsYXllchgBIAEoDjIGLkxheWVyEhoKEmVzcmlHZW9tZXRyeVN0cmlu",
            "ZxgCIAEoCRIQCgh0YXNrTkVJRBgDIAEoCSo6Cg1PZmZlckNhdGVnb3J5Eg8K",
            "C05PX0NBVEVHT1JZEAASDAoIU1BMSVRURVIQARIKCgZGRUVERVIQAioeCgxT",
            "cGxpdHRlclR5cGUSBgoCUzIQABIGCgJTMRABKigKDEZlZWRlck51bWJlchIL",
            "CgdGZWVkZXIxEAASCwoHRmVlZGVyMhABKjgKDFNwbGl0dGVyUG9ydBILCgdO",
            "T19QT1JUEAASCAoESU5fMRABEggKBElOXzIQAhIHCgNBTEwQA0IpChdjb20u",
            "bUNvbnN0cnVjdC5wcm90b2J1ZqoCDUdycGMuc2VydmljZXNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Grpc.common.CommonReflection.Descriptor, global::Grpc.services.TaskDataReflection.Descriptor, global::Grpc.services.QCDataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Grpc.services.OfferCategory), typeof(global::Grpc.services.SplitterType), typeof(global::Grpc.services.FeederNumber), typeof(global::Grpc.services.SplitterPort), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.PossibleOffer), global::Grpc.services.PossibleOffer.Parser, new[]{ "OfferCategory", "TaskId", "TaskNEID", "DsaName", "DsaID", "FsaName", "FsaID", "JpName", "JpID", "TotalTasksCount", "CompletedTasksCount", "PendingTasksCount", "SplitterTags", "FeederNumber", "Status" }, new[]{ "Identifier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.SplitterOfferTags), global::Grpc.services.SplitterOfferTags.Parser, new[]{ "SplitterType", "SplitterPort" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.OfferData), global::Grpc.services.OfferData.Parser, new[]{ "OfferCode", "FsaName", "FsaID", "JpName", "JpID", "TotalTasksCount", "OfferCategory", "SplitterTags", "FeederNumber", "TaskID" }, new[]{ "Identifier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.OfferSummary), global::Grpc.services.OfferSummary.Parser, new[]{ "OfferCode", "EquipmentSummary", "TransmediaSummary", "StructureSummary", "SpanSummary" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.LayerSummary), global::Grpc.services.LayerSummary.Parser, new[]{ "Layer", "TotalDesignValue", "TotalActualValue", "Uom", "Task", "QualityCheckpoints" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.TaskWrapper), global::Grpc.services.TaskWrapper.Parser, new[]{ "Layer", "TaskNEID" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Grpc.services.GeoDataWrapper), global::Grpc.services.GeoDataWrapper.Parser, new[]{ "Layer", "EsriGeometryString", "TaskNEID" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum OfferCategory {
    [pbr::OriginalName("NO_CATEGORY")] NoCategory = 0,
    [pbr::OriginalName("SPLITTER")] Splitter = 1,
    [pbr::OriginalName("FEEDER")] Feeder = 2,
  }

  public enum SplitterType {
    [pbr::OriginalName("S2")] S2 = 0,
    [pbr::OriginalName("S1")] S1 = 1,
  }

  public enum FeederNumber {
    [pbr::OriginalName("Feeder1")] Feeder1 = 0,
    [pbr::OriginalName("Feeder2")] Feeder2 = 1,
  }

  public enum SplitterPort {
    [pbr::OriginalName("NO_PORT")] NoPort = 0,
    [pbr::OriginalName("IN_1")] In1 = 1,
    [pbr::OriginalName("IN_2")] In2 = 2,
    [pbr::OriginalName("ALL")] All = 3,
  }

  #endregion

  #region Messages
  public sealed partial class PossibleOffer : pb::IMessage<PossibleOffer> {
    private static readonly pb::MessageParser<PossibleOffer> _parser = new pb::MessageParser<PossibleOffer>(() => new PossibleOffer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PossibleOffer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.OfferDataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PossibleOffer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PossibleOffer(PossibleOffer other) : this() {
      offerCategory_ = other.offerCategory_;
      taskId_ = other.taskId_;
      taskNEID_ = other.taskNEID_;
      dsaName_ = other.dsaName_;
      dsaID_ = other.dsaID_;
      fsaName_ = other.fsaName_;
      fsaID_ = other.fsaID_;
      jpName_ = other.jpName_;
      jpID_ = other.jpID_;
      totalTasksCount_ = other.totalTasksCount_;
      completedTasksCount_ = other.completedTasksCount_;
      pendingTasksCount_ = other.pendingTasksCount_;
      status_ = other.status_;
      switch (other.IdentifierCase) {
        case IdentifierOneofCase.SplitterTags:
          SplitterTags = other.SplitterTags.Clone();
          break;
        case IdentifierOneofCase.FeederNumber:
          FeederNumber = other.FeederNumber;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PossibleOffer Clone() {
      return new PossibleOffer(this);
    }

    /// <summary>Field number for the "offerCategory" field.</summary>
    public const int OfferCategoryFieldNumber = 1;
    private global::Grpc.services.OfferCategory offerCategory_ = global::Grpc.services.OfferCategory.NoCategory;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.OfferCategory OfferCategory {
      get { return offerCategory_; }
      set {
        offerCategory_ = value;
      }
    }

    /// <summary>Field number for the "taskId" field.</summary>
    public const int TaskIdFieldNumber = 2;
    private string taskId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskNEID" field.</summary>
    public const int TaskNEIDFieldNumber = 3;
    private string taskNEID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskNEID {
      get { return taskNEID_; }
      set {
        taskNEID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dsaName" field.</summary>
    public const int DsaNameFieldNumber = 4;
    private string dsaName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DsaName {
      get { return dsaName_; }
      set {
        dsaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dsaID" field.</summary>
    public const int DsaIDFieldNumber = 5;
    private string dsaID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DsaID {
      get { return dsaID_; }
      set {
        dsaID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fsaName" field.</summary>
    public const int FsaNameFieldNumber = 6;
    private string fsaName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FsaName {
      get { return fsaName_; }
      set {
        fsaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fsaID" field.</summary>
    public const int FsaIDFieldNumber = 7;
    private string fsaID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FsaID {
      get { return fsaID_; }
      set {
        fsaID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jpName" field.</summary>
    public const int JpNameFieldNumber = 8;
    private string jpName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JpName {
      get { return jpName_; }
      set {
        jpName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jpID" field.</summary>
    public const int JpIDFieldNumber = 9;
    private string jpID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JpID {
      get { return jpID_; }
      set {
        jpID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "totalTasksCount" field.</summary>
    public const int TotalTasksCountFieldNumber = 10;
    private int totalTasksCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalTasksCount {
      get { return totalTasksCount_; }
      set {
        totalTasksCount_ = value;
      }
    }

    /// <summary>Field number for the "completedTasksCount" field.</summary>
    public const int CompletedTasksCountFieldNumber = 11;
    private int completedTasksCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CompletedTasksCount {
      get { return completedTasksCount_; }
      set {
        completedTasksCount_ = value;
      }
    }

    /// <summary>Field number for the "pendingTasksCount" field.</summary>
    public const int PendingTasksCountFieldNumber = 12;
    private int pendingTasksCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PendingTasksCount {
      get { return pendingTasksCount_; }
      set {
        pendingTasksCount_ = value;
      }
    }

    /// <summary>Field number for the "splitterTags" field.</summary>
    public const int SplitterTagsFieldNumber = 13;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.SplitterOfferTags SplitterTags {
      get { return identifierCase_ == IdentifierOneofCase.SplitterTags ? (global::Grpc.services.SplitterOfferTags) identifier_ : null; }
      set {
        identifier_ = value;
        identifierCase_ = value == null ? IdentifierOneofCase.None : IdentifierOneofCase.SplitterTags;
      }
    }

    /// <summary>Field number for the "feederNumber" field.</summary>
    public const int FeederNumberFieldNumber = 14;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.FeederNumber FeederNumber {
      get { return identifierCase_ == IdentifierOneofCase.FeederNumber ? (global::Grpc.services.FeederNumber) identifier_ : global::Grpc.services.FeederNumber.Feeder1; }
      set {
        identifier_ = value;
        identifierCase_ = IdentifierOneofCase.FeederNumber;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 15;
    private global::Grpc.services.Status status_ = global::Grpc.services.Status.Assigned;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    private object identifier_;
    /// <summary>Enum of possible cases for the "identifier" oneof.</summary>
    public enum IdentifierOneofCase {
      None = 0,
      SplitterTags = 13,
      FeederNumber = 14,
    }
    private IdentifierOneofCase identifierCase_ = IdentifierOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentifierOneofCase IdentifierCase {
      get { return identifierCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdentifier() {
      identifierCase_ = IdentifierOneofCase.None;
      identifier_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PossibleOffer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PossibleOffer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OfferCategory != other.OfferCategory) return false;
      if (TaskId != other.TaskId) return false;
      if (TaskNEID != other.TaskNEID) return false;
      if (DsaName != other.DsaName) return false;
      if (DsaID != other.DsaID) return false;
      if (FsaName != other.FsaName) return false;
      if (FsaID != other.FsaID) return false;
      if (JpName != other.JpName) return false;
      if (JpID != other.JpID) return false;
      if (TotalTasksCount != other.TotalTasksCount) return false;
      if (CompletedTasksCount != other.CompletedTasksCount) return false;
      if (PendingTasksCount != other.PendingTasksCount) return false;
      if (!object.Equals(SplitterTags, other.SplitterTags)) return false;
      if (FeederNumber != other.FeederNumber) return false;
      if (Status != other.Status) return false;
      if (IdentifierCase != other.IdentifierCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OfferCategory != global::Grpc.services.OfferCategory.NoCategory) hash ^= OfferCategory.GetHashCode();
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      if (TaskNEID.Length != 0) hash ^= TaskNEID.GetHashCode();
      if (DsaName.Length != 0) hash ^= DsaName.GetHashCode();
      if (DsaID.Length != 0) hash ^= DsaID.GetHashCode();
      if (FsaName.Length != 0) hash ^= FsaName.GetHashCode();
      if (FsaID.Length != 0) hash ^= FsaID.GetHashCode();
      if (JpName.Length != 0) hash ^= JpName.GetHashCode();
      if (JpID.Length != 0) hash ^= JpID.GetHashCode();
      if (TotalTasksCount != 0) hash ^= TotalTasksCount.GetHashCode();
      if (CompletedTasksCount != 0) hash ^= CompletedTasksCount.GetHashCode();
      if (PendingTasksCount != 0) hash ^= PendingTasksCount.GetHashCode();
      if (identifierCase_ == IdentifierOneofCase.SplitterTags) hash ^= SplitterTags.GetHashCode();
      if (identifierCase_ == IdentifierOneofCase.FeederNumber) hash ^= FeederNumber.GetHashCode();
      if (Status != global::Grpc.services.Status.Assigned) hash ^= Status.GetHashCode();
      hash ^= (int) identifierCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OfferCategory != global::Grpc.services.OfferCategory.NoCategory) {
        output.WriteRawTag(8);
        output.WriteEnum((int) OfferCategory);
      }
      if (TaskId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskId);
      }
      if (TaskNEID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TaskNEID);
      }
      if (DsaName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DsaName);
      }
      if (DsaID.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DsaID);
      }
      if (FsaName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FsaName);
      }
      if (FsaID.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(FsaID);
      }
      if (JpName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(JpName);
      }
      if (JpID.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(JpID);
      }
      if (TotalTasksCount != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(TotalTasksCount);
      }
      if (CompletedTasksCount != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(CompletedTasksCount);
      }
      if (PendingTasksCount != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(PendingTasksCount);
      }
      if (identifierCase_ == IdentifierOneofCase.SplitterTags) {
        output.WriteRawTag(106);
        output.WriteMessage(SplitterTags);
      }
      if (identifierCase_ == IdentifierOneofCase.FeederNumber) {
        output.WriteRawTag(112);
        output.WriteEnum((int) FeederNumber);
      }
      if (Status != global::Grpc.services.Status.Assigned) {
        output.WriteRawTag(120);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OfferCategory != global::Grpc.services.OfferCategory.NoCategory) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OfferCategory);
      }
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      if (TaskNEID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskNEID);
      }
      if (DsaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DsaName);
      }
      if (DsaID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DsaID);
      }
      if (FsaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FsaName);
      }
      if (FsaID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FsaID);
      }
      if (JpName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JpName);
      }
      if (JpID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JpID);
      }
      if (TotalTasksCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalTasksCount);
      }
      if (CompletedTasksCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CompletedTasksCount);
      }
      if (PendingTasksCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PendingTasksCount);
      }
      if (identifierCase_ == IdentifierOneofCase.SplitterTags) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SplitterTags);
      }
      if (identifierCase_ == IdentifierOneofCase.FeederNumber) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FeederNumber);
      }
      if (Status != global::Grpc.services.Status.Assigned) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PossibleOffer other) {
      if (other == null) {
        return;
      }
      if (other.OfferCategory != global::Grpc.services.OfferCategory.NoCategory) {
        OfferCategory = other.OfferCategory;
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      if (other.TaskNEID.Length != 0) {
        TaskNEID = other.TaskNEID;
      }
      if (other.DsaName.Length != 0) {
        DsaName = other.DsaName;
      }
      if (other.DsaID.Length != 0) {
        DsaID = other.DsaID;
      }
      if (other.FsaName.Length != 0) {
        FsaName = other.FsaName;
      }
      if (other.FsaID.Length != 0) {
        FsaID = other.FsaID;
      }
      if (other.JpName.Length != 0) {
        JpName = other.JpName;
      }
      if (other.JpID.Length != 0) {
        JpID = other.JpID;
      }
      if (other.TotalTasksCount != 0) {
        TotalTasksCount = other.TotalTasksCount;
      }
      if (other.CompletedTasksCount != 0) {
        CompletedTasksCount = other.CompletedTasksCount;
      }
      if (other.PendingTasksCount != 0) {
        PendingTasksCount = other.PendingTasksCount;
      }
      if (other.Status != global::Grpc.services.Status.Assigned) {
        Status = other.Status;
      }
      switch (other.IdentifierCase) {
        case IdentifierOneofCase.SplitterTags:
          if (SplitterTags == null) {
            SplitterTags = new global::Grpc.services.SplitterOfferTags();
          }
          SplitterTags.MergeFrom(other.SplitterTags);
          break;
        case IdentifierOneofCase.FeederNumber:
          FeederNumber = other.FeederNumber;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            OfferCategory = (global::Grpc.services.OfferCategory) input.ReadEnum();
            break;
          }
          case 18: {
            TaskId = input.ReadString();
            break;
          }
          case 26: {
            TaskNEID = input.ReadString();
            break;
          }
          case 34: {
            DsaName = input.ReadString();
            break;
          }
          case 42: {
            DsaID = input.ReadString();
            break;
          }
          case 50: {
            FsaName = input.ReadString();
            break;
          }
          case 58: {
            FsaID = input.ReadString();
            break;
          }
          case 66: {
            JpName = input.ReadString();
            break;
          }
          case 74: {
            JpID = input.ReadString();
            break;
          }
          case 80: {
            TotalTasksCount = input.ReadInt32();
            break;
          }
          case 88: {
            CompletedTasksCount = input.ReadInt32();
            break;
          }
          case 96: {
            PendingTasksCount = input.ReadInt32();
            break;
          }
          case 106: {
            global::Grpc.services.SplitterOfferTags subBuilder = new global::Grpc.services.SplitterOfferTags();
            if (identifierCase_ == IdentifierOneofCase.SplitterTags) {
              subBuilder.MergeFrom(SplitterTags);
            }
            input.ReadMessage(subBuilder);
            SplitterTags = subBuilder;
            break;
          }
          case 112: {
            identifier_ = input.ReadEnum();
            identifierCase_ = IdentifierOneofCase.FeederNumber;
            break;
          }
          case 120: {
            Status = (global::Grpc.services.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SplitterOfferTags : pb::IMessage<SplitterOfferTags> {
    private static readonly pb::MessageParser<SplitterOfferTags> _parser = new pb::MessageParser<SplitterOfferTags>(() => new SplitterOfferTags());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SplitterOfferTags> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.OfferDataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitterOfferTags() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitterOfferTags(SplitterOfferTags other) : this() {
      splitterType_ = other.splitterType_;
      splitterPort_ = other.splitterPort_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SplitterOfferTags Clone() {
      return new SplitterOfferTags(this);
    }

    /// <summary>Field number for the "splitterType" field.</summary>
    public const int SplitterTypeFieldNumber = 1;
    private global::Grpc.services.SplitterType splitterType_ = global::Grpc.services.SplitterType.S2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.SplitterType SplitterType {
      get { return splitterType_; }
      set {
        splitterType_ = value;
      }
    }

    /// <summary>Field number for the "splitterPort" field.</summary>
    public const int SplitterPortFieldNumber = 2;
    private global::Grpc.services.SplitterPort splitterPort_ = global::Grpc.services.SplitterPort.NoPort;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.SplitterPort SplitterPort {
      get { return splitterPort_; }
      set {
        splitterPort_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SplitterOfferTags);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SplitterOfferTags other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SplitterType != other.SplitterType) return false;
      if (SplitterPort != other.SplitterPort) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SplitterType != global::Grpc.services.SplitterType.S2) hash ^= SplitterType.GetHashCode();
      if (SplitterPort != global::Grpc.services.SplitterPort.NoPort) hash ^= SplitterPort.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SplitterType != global::Grpc.services.SplitterType.S2) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SplitterType);
      }
      if (SplitterPort != global::Grpc.services.SplitterPort.NoPort) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SplitterPort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SplitterType != global::Grpc.services.SplitterType.S2) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SplitterType);
      }
      if (SplitterPort != global::Grpc.services.SplitterPort.NoPort) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SplitterPort);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SplitterOfferTags other) {
      if (other == null) {
        return;
      }
      if (other.SplitterType != global::Grpc.services.SplitterType.S2) {
        SplitterType = other.SplitterType;
      }
      if (other.SplitterPort != global::Grpc.services.SplitterPort.NoPort) {
        SplitterPort = other.SplitterPort;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SplitterType = (global::Grpc.services.SplitterType) input.ReadEnum();
            break;
          }
          case 16: {
            SplitterPort = (global::Grpc.services.SplitterPort) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferData : pb::IMessage<OfferData> {
    private static readonly pb::MessageParser<OfferData> _parser = new pb::MessageParser<OfferData>(() => new OfferData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.OfferDataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferData(OfferData other) : this() {
      offerCode_ = other.offerCode_;
      fsaName_ = other.fsaName_;
      fsaID_ = other.fsaID_;
      jpName_ = other.jpName_;
      jpID_ = other.jpID_;
      totalTasksCount_ = other.totalTasksCount_;
      offerCategory_ = other.offerCategory_;
      taskID_ = other.taskID_;
      switch (other.IdentifierCase) {
        case IdentifierOneofCase.SplitterTags:
          SplitterTags = other.SplitterTags.Clone();
          break;
        case IdentifierOneofCase.FeederNumber:
          FeederNumber = other.FeederNumber;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferData Clone() {
      return new OfferData(this);
    }

    /// <summary>Field number for the "offerCode" field.</summary>
    public const int OfferCodeFieldNumber = 1;
    private string offerCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfferCode {
      get { return offerCode_; }
      set {
        offerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fsaName" field.</summary>
    public const int FsaNameFieldNumber = 2;
    private string fsaName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FsaName {
      get { return fsaName_; }
      set {
        fsaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fsaID" field.</summary>
    public const int FsaIDFieldNumber = 3;
    private string fsaID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FsaID {
      get { return fsaID_; }
      set {
        fsaID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jpName" field.</summary>
    public const int JpNameFieldNumber = 4;
    private string jpName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JpName {
      get { return jpName_; }
      set {
        jpName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "jpID" field.</summary>
    public const int JpIDFieldNumber = 5;
    private string jpID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JpID {
      get { return jpID_; }
      set {
        jpID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "totalTasksCount" field.</summary>
    public const int TotalTasksCountFieldNumber = 6;
    private int totalTasksCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalTasksCount {
      get { return totalTasksCount_; }
      set {
        totalTasksCount_ = value;
      }
    }

    /// <summary>Field number for the "offerCategory" field.</summary>
    public const int OfferCategoryFieldNumber = 7;
    private global::Grpc.services.OfferCategory offerCategory_ = global::Grpc.services.OfferCategory.NoCategory;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.OfferCategory OfferCategory {
      get { return offerCategory_; }
      set {
        offerCategory_ = value;
      }
    }

    /// <summary>Field number for the "splitterTags" field.</summary>
    public const int SplitterTagsFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.SplitterOfferTags SplitterTags {
      get { return identifierCase_ == IdentifierOneofCase.SplitterTags ? (global::Grpc.services.SplitterOfferTags) identifier_ : null; }
      set {
        identifier_ = value;
        identifierCase_ = value == null ? IdentifierOneofCase.None : IdentifierOneofCase.SplitterTags;
      }
    }

    /// <summary>Field number for the "feederNumber" field.</summary>
    public const int FeederNumberFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.FeederNumber FeederNumber {
      get { return identifierCase_ == IdentifierOneofCase.FeederNumber ? (global::Grpc.services.FeederNumber) identifier_ : global::Grpc.services.FeederNumber.Feeder1; }
      set {
        identifier_ = value;
        identifierCase_ = IdentifierOneofCase.FeederNumber;
      }
    }

    /// <summary>Field number for the "taskID" field.</summary>
    public const int TaskIDFieldNumber = 11;
    private string taskID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskID {
      get { return taskID_; }
      set {
        taskID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object identifier_;
    /// <summary>Enum of possible cases for the "identifier" oneof.</summary>
    public enum IdentifierOneofCase {
      None = 0,
      SplitterTags = 9,
      FeederNumber = 10,
    }
    private IdentifierOneofCase identifierCase_ = IdentifierOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdentifierOneofCase IdentifierCase {
      get { return identifierCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdentifier() {
      identifierCase_ = IdentifierOneofCase.None;
      identifier_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OfferCode != other.OfferCode) return false;
      if (FsaName != other.FsaName) return false;
      if (FsaID != other.FsaID) return false;
      if (JpName != other.JpName) return false;
      if (JpID != other.JpID) return false;
      if (TotalTasksCount != other.TotalTasksCount) return false;
      if (OfferCategory != other.OfferCategory) return false;
      if (!object.Equals(SplitterTags, other.SplitterTags)) return false;
      if (FeederNumber != other.FeederNumber) return false;
      if (TaskID != other.TaskID) return false;
      if (IdentifierCase != other.IdentifierCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OfferCode.Length != 0) hash ^= OfferCode.GetHashCode();
      if (FsaName.Length != 0) hash ^= FsaName.GetHashCode();
      if (FsaID.Length != 0) hash ^= FsaID.GetHashCode();
      if (JpName.Length != 0) hash ^= JpName.GetHashCode();
      if (JpID.Length != 0) hash ^= JpID.GetHashCode();
      if (TotalTasksCount != 0) hash ^= TotalTasksCount.GetHashCode();
      if (OfferCategory != global::Grpc.services.OfferCategory.NoCategory) hash ^= OfferCategory.GetHashCode();
      if (identifierCase_ == IdentifierOneofCase.SplitterTags) hash ^= SplitterTags.GetHashCode();
      if (identifierCase_ == IdentifierOneofCase.FeederNumber) hash ^= FeederNumber.GetHashCode();
      if (TaskID.Length != 0) hash ^= TaskID.GetHashCode();
      hash ^= (int) identifierCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OfferCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OfferCode);
      }
      if (FsaName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FsaName);
      }
      if (FsaID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FsaID);
      }
      if (JpName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(JpName);
      }
      if (JpID.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(JpID);
      }
      if (TotalTasksCount != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalTasksCount);
      }
      if (OfferCategory != global::Grpc.services.OfferCategory.NoCategory) {
        output.WriteRawTag(56);
        output.WriteEnum((int) OfferCategory);
      }
      if (identifierCase_ == IdentifierOneofCase.SplitterTags) {
        output.WriteRawTag(74);
        output.WriteMessage(SplitterTags);
      }
      if (identifierCase_ == IdentifierOneofCase.FeederNumber) {
        output.WriteRawTag(80);
        output.WriteEnum((int) FeederNumber);
      }
      if (TaskID.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(TaskID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OfferCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfferCode);
      }
      if (FsaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FsaName);
      }
      if (FsaID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FsaID);
      }
      if (JpName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JpName);
      }
      if (JpID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JpID);
      }
      if (TotalTasksCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalTasksCount);
      }
      if (OfferCategory != global::Grpc.services.OfferCategory.NoCategory) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OfferCategory);
      }
      if (identifierCase_ == IdentifierOneofCase.SplitterTags) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SplitterTags);
      }
      if (identifierCase_ == IdentifierOneofCase.FeederNumber) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) FeederNumber);
      }
      if (TaskID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferData other) {
      if (other == null) {
        return;
      }
      if (other.OfferCode.Length != 0) {
        OfferCode = other.OfferCode;
      }
      if (other.FsaName.Length != 0) {
        FsaName = other.FsaName;
      }
      if (other.FsaID.Length != 0) {
        FsaID = other.FsaID;
      }
      if (other.JpName.Length != 0) {
        JpName = other.JpName;
      }
      if (other.JpID.Length != 0) {
        JpID = other.JpID;
      }
      if (other.TotalTasksCount != 0) {
        TotalTasksCount = other.TotalTasksCount;
      }
      if (other.OfferCategory != global::Grpc.services.OfferCategory.NoCategory) {
        OfferCategory = other.OfferCategory;
      }
      if (other.TaskID.Length != 0) {
        TaskID = other.TaskID;
      }
      switch (other.IdentifierCase) {
        case IdentifierOneofCase.SplitterTags:
          if (SplitterTags == null) {
            SplitterTags = new global::Grpc.services.SplitterOfferTags();
          }
          SplitterTags.MergeFrom(other.SplitterTags);
          break;
        case IdentifierOneofCase.FeederNumber:
          FeederNumber = other.FeederNumber;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OfferCode = input.ReadString();
            break;
          }
          case 18: {
            FsaName = input.ReadString();
            break;
          }
          case 26: {
            FsaID = input.ReadString();
            break;
          }
          case 34: {
            JpName = input.ReadString();
            break;
          }
          case 42: {
            JpID = input.ReadString();
            break;
          }
          case 48: {
            TotalTasksCount = input.ReadInt32();
            break;
          }
          case 56: {
            OfferCategory = (global::Grpc.services.OfferCategory) input.ReadEnum();
            break;
          }
          case 74: {
            global::Grpc.services.SplitterOfferTags subBuilder = new global::Grpc.services.SplitterOfferTags();
            if (identifierCase_ == IdentifierOneofCase.SplitterTags) {
              subBuilder.MergeFrom(SplitterTags);
            }
            input.ReadMessage(subBuilder);
            SplitterTags = subBuilder;
            break;
          }
          case 80: {
            identifier_ = input.ReadEnum();
            identifierCase_ = IdentifierOneofCase.FeederNumber;
            break;
          }
          case 90: {
            TaskID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OfferSummary : pb::IMessage<OfferSummary> {
    private static readonly pb::MessageParser<OfferSummary> _parser = new pb::MessageParser<OfferSummary>(() => new OfferSummary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OfferSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.OfferDataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferSummary(OfferSummary other) : this() {
      offerCode_ = other.offerCode_;
      equipmentSummary_ = other.equipmentSummary_ != null ? other.equipmentSummary_.Clone() : null;
      transmediaSummary_ = other.transmediaSummary_ != null ? other.transmediaSummary_.Clone() : null;
      structureSummary_ = other.structureSummary_ != null ? other.structureSummary_.Clone() : null;
      spanSummary_ = other.spanSummary_ != null ? other.spanSummary_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OfferSummary Clone() {
      return new OfferSummary(this);
    }

    /// <summary>Field number for the "offerCode" field.</summary>
    public const int OfferCodeFieldNumber = 1;
    private string offerCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfferCode {
      get { return offerCode_; }
      set {
        offerCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "equipmentSummary" field.</summary>
    public const int EquipmentSummaryFieldNumber = 2;
    private global::Grpc.services.LayerSummary equipmentSummary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.LayerSummary EquipmentSummary {
      get { return equipmentSummary_; }
      set {
        equipmentSummary_ = value;
      }
    }

    /// <summary>Field number for the "transmediaSummary" field.</summary>
    public const int TransmediaSummaryFieldNumber = 3;
    private global::Grpc.services.LayerSummary transmediaSummary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.LayerSummary TransmediaSummary {
      get { return transmediaSummary_; }
      set {
        transmediaSummary_ = value;
      }
    }

    /// <summary>Field number for the "structureSummary" field.</summary>
    public const int StructureSummaryFieldNumber = 4;
    private global::Grpc.services.LayerSummary structureSummary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.LayerSummary StructureSummary {
      get { return structureSummary_; }
      set {
        structureSummary_ = value;
      }
    }

    /// <summary>Field number for the "spanSummary" field.</summary>
    public const int SpanSummaryFieldNumber = 5;
    private global::Grpc.services.LayerSummary spanSummary_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.LayerSummary SpanSummary {
      get { return spanSummary_; }
      set {
        spanSummary_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OfferSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OfferSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OfferCode != other.OfferCode) return false;
      if (!object.Equals(EquipmentSummary, other.EquipmentSummary)) return false;
      if (!object.Equals(TransmediaSummary, other.TransmediaSummary)) return false;
      if (!object.Equals(StructureSummary, other.StructureSummary)) return false;
      if (!object.Equals(SpanSummary, other.SpanSummary)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OfferCode.Length != 0) hash ^= OfferCode.GetHashCode();
      if (equipmentSummary_ != null) hash ^= EquipmentSummary.GetHashCode();
      if (transmediaSummary_ != null) hash ^= TransmediaSummary.GetHashCode();
      if (structureSummary_ != null) hash ^= StructureSummary.GetHashCode();
      if (spanSummary_ != null) hash ^= SpanSummary.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OfferCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(OfferCode);
      }
      if (equipmentSummary_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(EquipmentSummary);
      }
      if (transmediaSummary_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TransmediaSummary);
      }
      if (structureSummary_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(StructureSummary);
      }
      if (spanSummary_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SpanSummary);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OfferCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OfferCode);
      }
      if (equipmentSummary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EquipmentSummary);
      }
      if (transmediaSummary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransmediaSummary);
      }
      if (structureSummary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StructureSummary);
      }
      if (spanSummary_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpanSummary);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OfferSummary other) {
      if (other == null) {
        return;
      }
      if (other.OfferCode.Length != 0) {
        OfferCode = other.OfferCode;
      }
      if (other.equipmentSummary_ != null) {
        if (equipmentSummary_ == null) {
          EquipmentSummary = new global::Grpc.services.LayerSummary();
        }
        EquipmentSummary.MergeFrom(other.EquipmentSummary);
      }
      if (other.transmediaSummary_ != null) {
        if (transmediaSummary_ == null) {
          TransmediaSummary = new global::Grpc.services.LayerSummary();
        }
        TransmediaSummary.MergeFrom(other.TransmediaSummary);
      }
      if (other.structureSummary_ != null) {
        if (structureSummary_ == null) {
          StructureSummary = new global::Grpc.services.LayerSummary();
        }
        StructureSummary.MergeFrom(other.StructureSummary);
      }
      if (other.spanSummary_ != null) {
        if (spanSummary_ == null) {
          SpanSummary = new global::Grpc.services.LayerSummary();
        }
        SpanSummary.MergeFrom(other.SpanSummary);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OfferCode = input.ReadString();
            break;
          }
          case 18: {
            if (equipmentSummary_ == null) {
              EquipmentSummary = new global::Grpc.services.LayerSummary();
            }
            input.ReadMessage(EquipmentSummary);
            break;
          }
          case 26: {
            if (transmediaSummary_ == null) {
              TransmediaSummary = new global::Grpc.services.LayerSummary();
            }
            input.ReadMessage(TransmediaSummary);
            break;
          }
          case 34: {
            if (structureSummary_ == null) {
              StructureSummary = new global::Grpc.services.LayerSummary();
            }
            input.ReadMessage(StructureSummary);
            break;
          }
          case 42: {
            if (spanSummary_ == null) {
              SpanSummary = new global::Grpc.services.LayerSummary();
            }
            input.ReadMessage(SpanSummary);
            break;
          }
        }
      }
    }

  }

  public sealed partial class LayerSummary : pb::IMessage<LayerSummary> {
    private static readonly pb::MessageParser<LayerSummary> _parser = new pb::MessageParser<LayerSummary>(() => new LayerSummary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LayerSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.OfferDataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LayerSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LayerSummary(LayerSummary other) : this() {
      layer_ = other.layer_;
      totalDesignValue_ = other.totalDesignValue_;
      totalActualValue_ = other.totalActualValue_;
      uom_ = other.uom_;
      task_ = other.task_.Clone();
      qualityCheckpoints_ = other.qualityCheckpoints_ != null ? other.qualityCheckpoints_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LayerSummary Clone() {
      return new LayerSummary(this);
    }

    /// <summary>Field number for the "layer" field.</summary>
    public const int LayerFieldNumber = 1;
    private global::Grpc.common.Layer layer_ = global::Grpc.common.Layer.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.common.Layer Layer {
      get { return layer_; }
      set {
        layer_ = value;
      }
    }

    /// <summary>Field number for the "totalDesignValue" field.</summary>
    public const int TotalDesignValueFieldNumber = 2;
    private double totalDesignValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TotalDesignValue {
      get { return totalDesignValue_; }
      set {
        totalDesignValue_ = value;
      }
    }

    /// <summary>Field number for the "totalActualValue" field.</summary>
    public const int TotalActualValueFieldNumber = 3;
    private double totalActualValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double TotalActualValue {
      get { return totalActualValue_; }
      set {
        totalActualValue_ = value;
      }
    }

    /// <summary>Field number for the "uom" field.</summary>
    public const int UomFieldNumber = 4;
    private string uom_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uom {
      get { return uom_; }
      set {
        uom_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task" field.</summary>
    public const int TaskFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Grpc.services.TaskSnapshot> _repeated_task_codec
        = pb::FieldCodec.ForMessage(42, global::Grpc.services.TaskSnapshot.Parser);
    private readonly pbc::RepeatedField<global::Grpc.services.TaskSnapshot> task_ = new pbc::RepeatedField<global::Grpc.services.TaskSnapshot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Grpc.services.TaskSnapshot> Task {
      get { return task_; }
    }

    /// <summary>Field number for the "qualityCheckpoints" field.</summary>
    public const int QualityCheckpointsFieldNumber = 6;
    private global::Grpc.services.QualityCheckpointSnippet qualityCheckpoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.services.QualityCheckpointSnippet QualityCheckpoints {
      get { return qualityCheckpoints_; }
      set {
        qualityCheckpoints_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LayerSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LayerSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Layer != other.Layer) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalDesignValue, other.TotalDesignValue)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(TotalActualValue, other.TotalActualValue)) return false;
      if (Uom != other.Uom) return false;
      if(!task_.Equals(other.task_)) return false;
      if (!object.Equals(QualityCheckpoints, other.QualityCheckpoints)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Layer != global::Grpc.common.Layer.None) hash ^= Layer.GetHashCode();
      if (TotalDesignValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalDesignValue);
      if (TotalActualValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(TotalActualValue);
      if (Uom.Length != 0) hash ^= Uom.GetHashCode();
      hash ^= task_.GetHashCode();
      if (qualityCheckpoints_ != null) hash ^= QualityCheckpoints.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Layer != global::Grpc.common.Layer.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Layer);
      }
      if (TotalDesignValue != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(TotalDesignValue);
      }
      if (TotalActualValue != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(TotalActualValue);
      }
      if (Uom.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Uom);
      }
      task_.WriteTo(output, _repeated_task_codec);
      if (qualityCheckpoints_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(QualityCheckpoints);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Layer != global::Grpc.common.Layer.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Layer);
      }
      if (TotalDesignValue != 0D) {
        size += 1 + 8;
      }
      if (TotalActualValue != 0D) {
        size += 1 + 8;
      }
      if (Uom.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uom);
      }
      size += task_.CalculateSize(_repeated_task_codec);
      if (qualityCheckpoints_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QualityCheckpoints);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LayerSummary other) {
      if (other == null) {
        return;
      }
      if (other.Layer != global::Grpc.common.Layer.None) {
        Layer = other.Layer;
      }
      if (other.TotalDesignValue != 0D) {
        TotalDesignValue = other.TotalDesignValue;
      }
      if (other.TotalActualValue != 0D) {
        TotalActualValue = other.TotalActualValue;
      }
      if (other.Uom.Length != 0) {
        Uom = other.Uom;
      }
      task_.Add(other.task_);
      if (other.qualityCheckpoints_ != null) {
        if (qualityCheckpoints_ == null) {
          QualityCheckpoints = new global::Grpc.services.QualityCheckpointSnippet();
        }
        QualityCheckpoints.MergeFrom(other.QualityCheckpoints);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Layer = (global::Grpc.common.Layer) input.ReadEnum();
            break;
          }
          case 17: {
            TotalDesignValue = input.ReadDouble();
            break;
          }
          case 25: {
            TotalActualValue = input.ReadDouble();
            break;
          }
          case 34: {
            Uom = input.ReadString();
            break;
          }
          case 42: {
            task_.AddEntriesFrom(input, _repeated_task_codec);
            break;
          }
          case 50: {
            if (qualityCheckpoints_ == null) {
              QualityCheckpoints = new global::Grpc.services.QualityCheckpointSnippet();
            }
            input.ReadMessage(QualityCheckpoints);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TaskWrapper : pb::IMessage<TaskWrapper> {
    private static readonly pb::MessageParser<TaskWrapper> _parser = new pb::MessageParser<TaskWrapper>(() => new TaskWrapper());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaskWrapper> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.OfferDataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskWrapper() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskWrapper(TaskWrapper other) : this() {
      layer_ = other.layer_;
      taskNEID_ = other.taskNEID_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaskWrapper Clone() {
      return new TaskWrapper(this);
    }

    /// <summary>Field number for the "layer" field.</summary>
    public const int LayerFieldNumber = 1;
    private global::Grpc.common.Layer layer_ = global::Grpc.common.Layer.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.common.Layer Layer {
      get { return layer_; }
      set {
        layer_ = value;
      }
    }

    /// <summary>Field number for the "taskNEID" field.</summary>
    public const int TaskNEIDFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_taskNEID_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> taskNEID_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> TaskNEID {
      get { return taskNEID_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaskWrapper);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaskWrapper other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Layer != other.Layer) return false;
      if(!taskNEID_.Equals(other.taskNEID_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Layer != global::Grpc.common.Layer.None) hash ^= Layer.GetHashCode();
      hash ^= taskNEID_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Layer != global::Grpc.common.Layer.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Layer);
      }
      taskNEID_.WriteTo(output, _repeated_taskNEID_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Layer != global::Grpc.common.Layer.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Layer);
      }
      size += taskNEID_.CalculateSize(_repeated_taskNEID_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaskWrapper other) {
      if (other == null) {
        return;
      }
      if (other.Layer != global::Grpc.common.Layer.None) {
        Layer = other.Layer;
      }
      taskNEID_.Add(other.taskNEID_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Layer = (global::Grpc.common.Layer) input.ReadEnum();
            break;
          }
          case 18: {
            taskNEID_.AddEntriesFrom(input, _repeated_taskNEID_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GeoDataWrapper : pb::IMessage<GeoDataWrapper> {
    private static readonly pb::MessageParser<GeoDataWrapper> _parser = new pb::MessageParser<GeoDataWrapper>(() => new GeoDataWrapper());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GeoDataWrapper> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Grpc.services.OfferDataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoDataWrapper() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoDataWrapper(GeoDataWrapper other) : this() {
      layer_ = other.layer_;
      esriGeometryString_ = other.esriGeometryString_;
      taskNEID_ = other.taskNEID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GeoDataWrapper Clone() {
      return new GeoDataWrapper(this);
    }

    /// <summary>Field number for the "layer" field.</summary>
    public const int LayerFieldNumber = 1;
    private global::Grpc.common.Layer layer_ = global::Grpc.common.Layer.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Grpc.common.Layer Layer {
      get { return layer_; }
      set {
        layer_ = value;
      }
    }

    /// <summary>Field number for the "esriGeometryString" field.</summary>
    public const int EsriGeometryStringFieldNumber = 2;
    private string esriGeometryString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EsriGeometryString {
      get { return esriGeometryString_; }
      set {
        esriGeometryString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "taskNEID" field.</summary>
    public const int TaskNEIDFieldNumber = 3;
    private string taskNEID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskNEID {
      get { return taskNEID_; }
      set {
        taskNEID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GeoDataWrapper);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GeoDataWrapper other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Layer != other.Layer) return false;
      if (EsriGeometryString != other.EsriGeometryString) return false;
      if (TaskNEID != other.TaskNEID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Layer != global::Grpc.common.Layer.None) hash ^= Layer.GetHashCode();
      if (EsriGeometryString.Length != 0) hash ^= EsriGeometryString.GetHashCode();
      if (TaskNEID.Length != 0) hash ^= TaskNEID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Layer != global::Grpc.common.Layer.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Layer);
      }
      if (EsriGeometryString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(EsriGeometryString);
      }
      if (TaskNEID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TaskNEID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Layer != global::Grpc.common.Layer.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Layer);
      }
      if (EsriGeometryString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EsriGeometryString);
      }
      if (TaskNEID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskNEID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GeoDataWrapper other) {
      if (other == null) {
        return;
      }
      if (other.Layer != global::Grpc.common.Layer.None) {
        Layer = other.Layer;
      }
      if (other.EsriGeometryString.Length != 0) {
        EsriGeometryString = other.EsriGeometryString;
      }
      if (other.TaskNEID.Length != 0) {
        TaskNEID = other.TaskNEID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Layer = (global::Grpc.common.Layer) input.ReadEnum();
            break;
          }
          case 18: {
            EsriGeometryString = input.ReadString();
            break;
          }
          case 26: {
            TaskNEID = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
